<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>𝓗𝓸𝓼𝓱𝓲𝔃𝓸𝓻𝓪</title>
  
  <subtitle>希望阳光很暖，微风不燥，时光不老，你我都好。</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="https://cxyzzz.gtihub.io/"/>
  <updated>2019-08-14T05:11:06.794Z</updated>
  <id>https://cxyzzz.gtihub.io/</id>
  
  <author>
    <name>𝐂𝐡𝐞𝐧</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>手机使用 Rclone 挂载网盘</title>
    <link href="https://cxyzzz.gtihub.io/posts/2a60e472.html"/>
    <id>https://cxyzzz.gtihub.io/posts/2a60e472.html</id>
    <published>2019-07-16T14:22:05.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>将网盘挂载到手机上当硬盘使用</p><a id="more"></a><details><summary>点击显示更新信息</summary><div class="note success"><h3 id="2019-08-09-更新"><a href="#2019-08-09-更新" class="headerlink" title="2019.08.09 更新"></a>2019.08.09 更新</h3><p>版本 v1.7.b</p><ol><li>添加网络检测开关，默认启用，可在<code>.global.param</code>文件中添加<code>NETCHK=0</code>关闭</li><li>修复当某一 remote 启用绑定到 sdcard 时在其后面的所有 remote 默认启用绑定到 sdcard 的 bug</li></ol><h3 id="2019-08-08-更新"><a href="#2019-08-08-更新" class="headerlink" title="2019.08.08 更新"></a>2019.08.08 更新</h3><p>版本 v1.7a</p><ol><li>修复了 custom_param 不生效的问题</li><li>添加了更多可自定义的默认参数</li><li>可以在<code>.*.param</code>中添加<code>HTTP=0</code>,<code>FTP=0</code>禁用 HTTP 和 FTP</li><li>更改启用绑定到 sdcard 的方式，在<code>.*.param</code>文件中添加<code>BINDSD=1</code>启用，以前版本的添加 .bindsd 文件失效</li><li>更改<code>BINDPOINT=</code>为<code>SDBINDPOINT=</code>，默认为/sdcard/Cloud/$REMOTE,要更改可在<code>.*.param</code>文件中添加<code>SDBINDPOINT=xx</code>,xx为要绑定的 /sdcard 下的目录名（直接填目录名，不需要路径）</li></ol><h3 id="2019-08-02-更新"><a href="#2019-08-02-更新" class="headerlink" title="2019.08.02 更新"></a>2019.08.02 更新</h3><p>作者更新了两个版本，v1.5 支持绑定到 /sdcard/cloud/ 了，在配置目录创建 <code>.bindsd</code> 文件启用，另外加入了网络检测，检测地址为 google.com ，需自行解决网络问题。v1.6 (当前版本) <code>.*.parame</code> 配置文件中增加了<code>ADD_PARAMS</code>和<code>REPLACE_PARAMS</code>用于添加和替换 rclone 挂载参数； 添加了一个 <code>.blobal.param</code> 配置文件用于修改全局参数，README 中只写了 <code>NETCHK_ADDR</code>和<code>BINDPOINT</code>用于修改网络检测地址和挂载点，还可以添加其他的值，但目前并不是很完善，部分默认参数无法修改。</p></div></details><div class="note info"><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ol><li>使用模块前建议先仔细阅读模块说明（README），这个模块并不是装上就能用的。</li><li>所有 param 文件中最后必须空一行，不然无法识别最后一行的内容。</li></ol></div><p>先来两张效果图：</p><details><summary>点击显示图片</summary><p><img alt="Screenshot_2019-07-16-20-25-42-875_bin.mt.plus.png" data-src="https://i.loli.net/2019/07/16/5d2dc2896ef0e90595.png"></p><p><img alt="Screenshot_2019-07-16-20-14-53-809_com.termux.png" data-src="https://i.loli.net/2019/07/16/5d2dc289cbdc671568.png"></p></details><p>　　不久前了解到了 <a href="https://rclone.org/" rel="external nofollow noopener noreferrer" target="_blank">rclone</a> 这个东西，rclone 是一个支持在多个网盘及存储服务同步文件和文件夹的命令行程序，使用 GO 语言编写。支持的服务列表可以在官网查看，像微软的 Onedrive 、谷歌的 GDrive 、阿里云对象存储以及支持 FTP、webdav 等协议的存储服务都支持，基本上覆盖了常见的存储服务提供商。使用 rclone 可以很方便的进行管理。<br>　　当然今天要说的是 rclone 的挂载功能，rclone 可以将网盘挂载到本地当做磁盘使用。rclone 挂载需要 fusermount 这个程序，在 PC 端很简单，一条命令就安装好了，但在手机端需要自行编译arm 架构的。我在网上找到个能用的 fusermount ，挂载成功了，但只能运行挂载命令的程序才可以访问，这样没有很大意义，后面就放弃了。最近 magisk 仓库更新了个 <a href="https://github.com/Magisk-Modules-Repo/com.piyushgarg.rclone" rel="external nofollow noopener noreferrer" target="_blank">rclone-mount</a> 模块，将 rclone、fusermount都提供了，并且写好了挂载脚本，作者解释了只能运行挂载命令的程序才能访问的原因。<br>　　使用模块需要先安装 magisk，并且由于 Android 系统限制，必须使用 root 权限才能挂载。magisk 安装这里就不多说了，我另一篇文章有介绍。因为模块目前有个 bug 如果没有找到 rclone.conf 文件模块在刷入时会卡住，如果是之前没用过 rclone 的需要先去创建 /sdcard/.rclone/rclone.conf 文件，这样就不会卡在模块安装界面了。安装完模块后接下来是配置 rclone，rclone 用法百度有很多教程，这里我简单说下。<br>　　首先要有一个 rclone 支持的网盘，比如 Onedrive，由于需要运行命令，所以需要用到终端，这里我用的是 Termux（推荐），使用其它终端也可以。<br>　　先运行 su 获取 root 权限，然后运行 <code>export XDG_CONFIG_HOME=/data/media/0</code> 设置 rclone 配置目录，以免找不到配置文件或者无权限。 <code>/data/adb/modules/com.piyushgarg.rclone/rclone config</code> 会显示当前已配置好的，我的之前已经添加了三个。</p><details><summary>点击显示图片</summary><p><img alt="Screenshot_2019-07-16-21-14-11-051_com.topjohnwu.magisk.png" data-src="https://i.loli.net/2019/07/16/5d2dce17eddb599440.png"></p></details><p>输入 n 回车创建一个新的远程地址，提示输入名字，这个可以随便取一个方便记住的名字，后面使用的时候就是用的这个名字，之后选择远程地址服务提供商，这里我用的 Onedrive 选 19，其它服务提供商也一样，只是在后面的操作有所不同，具体可以去 rclone 官网查看。选择 19 后接下来的东西用过 pyone、oneindex 等第三方客户端的会很熟悉，没错就是 client_id 和 client_secret，在这里我们都直接回车使用默认的就行。接下来会提示是否更改配置，这个是一些 rclone 的配置属性，直接输入 n 使用默认的即可。最后就是最重要的一步了，提示是否使用自动配置，这里选择 Y，输入后会自动打开浏览器，如果没有，可以手动打开上面显示的地址，登录要使用的账号进行授权，授权成功后返回终端，这里要注意如果是没有管理员或者管理员限制使用第三方应用的是没法认证的。之后会询问是哪种类型的存储，选择 1 也就是 Onedrive 那个就好。然后终端上会显示当前配置，询问配置是否正确选择 y 就回到了刚开始的界面，输入 q 退出。到此 rclone 的配置已经完成，接下来需要把配置文件放在指定位置。配置文件是放在 <code>/data/media/0/rclone/rclone.conf</code>，也就是内置存储下的 rclone/rclone.conf 运行 <code>su -c "cat /data/media/0/rclone/rclone.conf > /data/media/0/.rclone/rclone.conf"</code> 将配置文件添加到内置存储，最后先输入 su 授予 Termux root 权限，再运行 <code>/sbin/rclone remount</code> 等待命令运行完成即可。默认是挂载在 /mnt/cloud/ 目录下，目前无法挂载到 /sdcard 不过作者将在下一版添加这个功能。<br>　　最后再附上我的一个利用 rclone 进行备份的脚本，可以保存历史版本，语音播报备份情况。使用 tasker 之类的软件定时运行即可。需要安装 Termux 以及 Termux-API，并且 Termux 安装了 termux-tools，我把 rclone 添加到系统 PATH 里了，所以可以直接调用，如果 rclone 不在 /system/bin/ 或者 /system/xbin/ 中就需要使用 rclone 文件路径来调用（注意文件权限）。</p><details><summary>点击显示脚本内容</summary><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/system/bin/env sh</span></span><br><span class="line"><span class="built_in">export</span> LANG=C.UTF-8</span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_LEVEL=INFO</span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_FORMAT=date</span><br><span class="line"><span class="comment"># export RCLONE_BACKUP_DIR="love:/archive/$(date +%Y)/$(date +%F"_"%T)"</span></span><br><span class="line"><span class="built_in">export</span> RCLONE_BACKUP_DIR=<span class="string">"love:/old_files"</span>　　// 远程地址存储旧版备份文件的文件夹夹</span><br><span class="line"><span class="built_in">export</span> RCLONE_SUFFIX=<span class="string">"_<span class="variable">$(date +%F_%T)</span>"</span>　　// 旧备份文件名格式：原文件名_日期_时间</span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_FILE=/storage/emulated/0/rclone.log　　<span class="comment">#!/system/bin/env sh</span></span><br><span class="line"><span class="built_in">export</span> LANG=C.UTF-8</span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_LEVEL=INFO</span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_FORMAT=date</span><br><span class="line"><span class="comment"># export RCLONE_BACKUP_DIR="love:/archive/$(date +%Y)/$(date +%F"_"%T)"</span></span><br><span class="line"><span class="built_in">export</span> RCLONE_BACKUP_DIR=<span class="string">"love:/old_files"</span></span><br><span class="line"><span class="built_in">export</span> RCLONE_SUFFIX=<span class="string">"_<span class="variable">$(date +%F_%T)</span>"</span></span><br><span class="line"><span class="built_in">export</span> RCLONE_LOG_FILE=/storage/emulated/0/rclone.log　　// 日志</span><br><span class="line"><span class="built_in">export</span> XDG_CONFIG_HOME=<span class="string">"/storage/emulated/0/ADM/.config"</span>　　// 配置文件</span><br><span class="line">SD=/storage/emulated/0　　// 内置存储</span><br><span class="line"><span class="comment"># 要备份的目录</span></span><br><span class="line">buckup_dir=(<span class="string">".fooView"</span> <span class="string">"ADM"</span> <span class="string">"baidu"</span> <span class="string">"MyAndroidTools"</span> <span class="string">"Pictures"</span> <span class="string">"searchlite"</span> <span class="string">"ViPER4Android"</span> <span class="string">"Xposed_Edge_Icon"</span> <span class="string">"YueDu"</span> <span class="string">"习"</span>)</span><br><span class="line"><span class="comment"># 清空日志</span></span><br><span class="line">:><span class="variable">$RCLONE_LOG_FILE</span></span><br><span class="line"><span class="comment"># 检测网络链接</span></span><br><span class="line"><span class="comment"># 超时时间</span></span><br><span class="line">timeout=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标网站</span></span><br><span class="line">target=baidu.com</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取响应状态码</span></span><br><span class="line">ret_code=`curl -I -s --connect-timeout <span class="variable">$timeout</span> <span class="variable">$target</span> -w %{http_code} | tail -n1`</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x<span class="variable">$ret_code</span>"</span> = <span class="string">"x200"</span> ]; <span class="keyword">then</span></span><br><span class="line">    XiaoAiTTS <span class="string">"网络连接正常,开始备份！"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"网络连接正常,开始备份！"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> dir <span class="keyword">in</span> <span class="variable">${buckup_dir[@]}</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"正在备份 <span class="variable">$SD</span>/<span class="variable">$dir</span>"</span></span><br><span class="line">        rclone sync <span class="string">"<span class="variable">$SD</span>/<span class="variable">$dir</span>"</span> love:/snapshot/<span class="string">"<span class="variable">$dir</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    </span><br><span class="line">XiaoAiTTS <span class="string">"rclone 备份完成！"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +%F"-"%T)</span>\t备份完成！\n"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    XiaoAiTTS <span class="string">"网络连接异常，停止备份！"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"网络连接异常，停止备份！"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">export</span> XDG_CONFIG_HOME=<span class="string">"/storage/emulated/0/ADM/.config"</span></span><br><span class="line">SD=/storage/emulated/0</span><br><span class="line"><span class="comment"># 备份目录</span></span><br><span class="line">buckup_dir=(<span class="string">".fooView"</span> <span class="string">"ADM"</span> <span class="string">"baidu"</span> <span class="string">"MyAndroidTools"</span> <span class="string">"Pictures"</span> <span class="string">"searchlite"</span> <span class="string">"ViPER4Android"</span> <span class="string">"Xposed_Edge_Icon"</span> <span class="string">"YueDu"</span> <span class="string">"习"</span>)</span><br><span class="line"><span class="comment"># 清空日志</span></span><br><span class="line">:><span class="variable">$RCLONE_LOG_FILE</span></span><br><span class="line"><span class="comment"># 检测网络链接</span></span><br><span class="line"><span class="comment"># 超时时间</span></span><br><span class="line">timeout=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标网站</span></span><br><span class="line">target=baidu.com</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取响应状态码</span></span><br><span class="line">ret_code=`curl -I -s --connect-timeout <span class="variable">$timeout</span> <span class="variable">$target</span> -w %{http_code} | tail -n1`</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x<span class="variable">$ret_code</span>"</span> = <span class="string">"x200"</span> ]; <span class="keyword">then</span></span><br><span class="line">    XiaoAiTTS <span class="string">"网络连接正常,开始备份！"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"网络连接正常,开始备份！"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> dir <span class="keyword">in</span> <span class="variable">${buckup_dir[@]}</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"正在备份 <span class="variable">$SD</span>/<span class="variable">$dir</span>"</span></span><br><span class="line">        rclone sync <span class="string">"<span class="variable">$SD</span>/<span class="variable">$dir</span>"</span> love:/snapshot/<span class="string">"<span class="variable">$dir</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    </span><br><span class="line">XiaoAiTTS <span class="string">"rclone 备份完成！"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(date +%F"-"%T)</span>\t备份完成！\n"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    XiaoAiTTS <span class="string">"网络连接异常，停止备份！"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"网络连接异常，停止备份！"</span>>><span class="variable">$SD</span>/rclone.log</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></tbody></table></figure></details><p>　　其中 XiaoAiTTS 是我为了方便调用 Termux-API 的 TTS 工具写的小脚本，把它放在 /system/bin 或者 /system/xbin 这样就可以随便调用了，具体内容是：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/system/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib</span><br><span class="line"><span class="built_in">export</span> PATH=/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets</span><br><span class="line">termux-tts-speak <span class="variable">$1</span></span><br></pre></td></tr></tbody></table></figure><p>　　rclone 还有很多功能，我就不一一介绍了，官网上面对每一个命令都有详细点解释，参考官方文档即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将网盘挂载到手机上当硬盘使用&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://cxyzzz.gtihub.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="https://cxyzzz.gtihub.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>玩机 • Android（三）——进阶篇</title>
    <link href="https://cxyzzz.gtihub.io/posts/40e3c7df.html"/>
    <id>https://cxyzzz.gtihub.io/posts/40e3c7df.html</id>
    <published>2018-12-23T06:20:56.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><ul><li><a href="https://hoshizora.tw/posts/9e7b6f05.html" rel="external nofollow noopener noreferrer" target="_blank">玩机 • Android（一）——应用篇</a></li><li><a href="https://hoshizora.tw/posts/fab8c3b3.html" rel="external nofollow noopener noreferrer" target="_blank">玩机 • Android（二）——ROOT 篇</a></li></ul><p>Android 有两个模式：Recovery 和 Bootloader，也叫卡刷模式和线刷模式（部分手机可能不一样，功能都差不多）。</p><a id="more"></a><h2 id="Bootloader"><a href="#Bootloader" class="headerlink" title="Bootloader"></a>Bootloader</h2><p>系统在启动之前需要通过 bootloader 启动，手机启动的时候基带执行初始化，然后引导系统内核，直到系统启动。厂商为了安全，Google 也要求上锁，因而现在的手机基本都对 bootloader 上锁了，不解除就无法对 bootloader 进行更该（官方一般提供了解锁通道，申请通过后就能解锁）。Bootloader 模式通过电脑对设备进行清除数据、系统升级等操作，REC 也是在此模式下刷入的，救砖一般也是进的这个模式。Bootloader 一般是按住电源键和音量减键进入。进入后用数据线连接手机和电脑，电脑会自动安装所需驱动（没有自动安装的可以百度 Bootloader 驱动手动安装），安装好驱动后需要去下载 ADB 工具包</p><ul><li><p>Windows <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" rel="external nofollow noopener noreferrer" target="_blank">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a></p></li><li><p>Mac <a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip" rel="external nofollow noopener noreferrer" target="_blank">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a></p></li><li><p>Linux<br><a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip" rel="external nofollow noopener noreferrer" target="_blank">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></p></li></ul><p>进入工具包目录，在当前目录打开终端，输入 <code>adb devices</code>会显示当前设备，如果没显示则可能是驱动没装好。</p><p><img alt="Screenshot_20181223_154659.png" data-src="https://i.loli.net/2018/12/23/5c1f3dca16d41.png"></p><p>将下载的 Recovery 文件放在当前文件夹中，输入<code>fastboot.exe flash recovery MI-NOTE-TWRP3.1.0.img</code>，刷入 Recovery （MI-NOTE-TWRP3.1.0.img 为文件名字），之后输入<code>fastboot.exe boot MI-NOTE-TWRP3.1.0.img</code>进入 Recovery 模式。Bootloader 还有很多其它的功能，就不多说了（我是不会说其实是我不会其它的（ ￣ー￣））。</p><h2 id="Recovery"><a href="#Recovery" class="headerlink" title="Recovery"></a>Recovery</h2><p>Recovery 看它的名字大概够强猜出其功能了。自带的 Recovery 是非常简陋的，并不能满足我们的要求，所以需要使用如 TWRP、CWM 之类的第三方 REC。替换方法在前面 Bootloader 中有。进入 REC 的方法不同品牌可能有所不同，MIUI 是按住电源键和音量加音量减，出现 logo 后屏幕突然一亮之后松手即可进入。<br><img alt="TWRP_2.7.0.0.png" data-src="https://i.loli.net/2018/12/23/5c1f47bbbe168.png"><br>原版 TWRP 是没有中文的，不过一般都能在网上找到支持中文的版本。主要功能为安装、清除、备份、恢复、挂载、设置、高级功能。</p><ul><li><p>安装</p><p>这个就是刷机、获取 ROOT、安装 Magisk、安装 Xposed 等要用到的。点击 Install 进入文件选择界面，默认是刷入卡刷包也可以点击右下角刷入镜像刷入 Recovery 或则 Boot。</p></li><li><p>清除</p><p>可以恢复出产设置，也可以格式化某一分区。</p></li><li><p>备份/恢复</p><p>备份/恢复分区</p></li><li><p>挂载</p><p>挂载分区，一般用不上，使用高级功能式可能会用到。某些手机支持 OTG 功能要在 Recovery 下使用 OTG 存储需进行挂载。</p></li><li><p>设置</p><p>一些 Recovery 的设置项，比如切换语言调节显示亮度等。</p></li><li><p>高级功能</p><p>文件浏览器、终端等。进入某些目录时需先保证已近挂载，否则会显示空白。</p></li><li><p>重启</p><p>高级重启功能。包含重启到 Bootloader、重启到 Recovery、正常重启。</p></li></ul><p>介绍完 Bootloader 和 Recovery 后，接下来就是 Magisk 和 Xposed 了。因为这两个都非常强大但也有很大可能导致手机出现问题，所以必须要先准备好第三方 REC 以备不时之需。</p><h2 id="Magisk"><a href="#Magisk" class="headerlink" title="Magisk"></a>Magisk</h2><ul><li><p>安装</p><p>方法在第二篇 ROOT 篇中已进行介绍此处不在赘述。</p></li><li><p>使用</p><p>仓库中有很多不错的模块，点击模块即可查看详细信息。也可以手动安装自己下载的模块。</p><p>注：Magisk 模块可以看做是将模块内容替换系统中对应内容。安装模块前最好打开查看下是否对自己有用。</p></li></ul><h2 id="Xposed"><a href="#Xposed" class="headerlink" title="Xposed"></a>Xposed</h2><p>官网：<a href="https://repo.xposed.info/" rel="external nofollow noopener noreferrer" target="_blank">https://repo.xposed.info/</a></p><p>Xposed 框架是一款可以在不修改 APK 的情况下（修改系统）影响程序员运行的框架服务，基于它可以制作很多功能强大的模块。（刷入 Xposed 会对手机性能有一定影响，且随着启用模块越多影响越大（单框架影响不大，主要是模块），开机时间也会变长）</p><ul><li><p>安装</p><p>安装时确保已解锁 Bootloader 、拥有 ROOT 权限。<br>下载 <a href="https://www.coolapk.com/apk/de.robv.android.xposed.installer" rel="external nofollow noopener noreferrer" target="_blank">Xposed Installer</a> 安装后打开，先下载卸载包以防出问题后可以卸载。然后点击安装，Install 和 Install via recovery 都差不多，一个是下载后直接安装一个要手动进 REC 卡刷。</p><p>注：Xposed 兼容性最好的是原生类原生之类的 ROM。国产 UI 可能会卡开机。虽然最新版兼容性已经很好了，但在 MIUI 上还是会出现主题无法修改状态栏样式（SolarWarez 针对 MIUI 发布了修改版，可以完美使用，但已不再更新，目前只支持 Android 6.0 及以下系统）的问题。作者也表示不会针对 MIUI 等进行特别优化。目前 Xposed 最高支持 sdk27 即 Android 8.1。</p><p>另一种方法是手动下载卡刷包在 REC 中刷入。</p><p>下载地址：<a href="https://dl-xda.xposed.info/framework/" rel="external nofollow noopener noreferrer" target="_blank">https://dl-xda.xposed.info/framework/</a><br>需要注意的是安装包 api 和 cpu 架构必须和手机对应。<br><img alt="Screenshot_2018-12-23-17-11-51-990_de.robv.android.xposed.installer_1.png" data-src="https://i.loli.net/2018/12/23/5c1f58022cc48.png"></p></li><li><p>使用</p><p>刷入后第一次开机示安装应用数可能需要很长时间，期间耐性等待即可。之后就不用这么久了。</p><p>此为我所使用的模块：<br><img alt="Screenshot_2018-12-23-17-51-24-354_de.robv.android.xposed.installer.png" data-src="https://i.loli.net/2018/12/23/5c1f5b674418b.png"><br>以上模块均可在<a href="https://www.coolapk.com" rel="external nofollow noopener noreferrer" target="_blank">酷安</a>和 Xposed 仓库中找到（点击 Xposed Installer 左上角，侧栏中的下载项就是仓库）。</p></li></ul><p>最后再说下，Magisk 能和 Xposed 共存，可以在 Magisk 中安装 Xposed，找到对应的 Magisk 模块安装就行，不过不论是否修改了系统，安装 Xposed 后 Magisk 的 systemless 特性都被破坏，并且使用 Magisk 安装的 Xposed 必须修改版 Xposed Installer 才能识别（点击 Magisk 模块即可看见下载地址）。还有就是 Magisk 和 Xposed 两个是不同的东西，Magisk 实现不了 Xposed 的很多功能。很多人觉得 Xposed 能实现的 Magisk 也能实现是错误的。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hoshizora.tw/posts/9e7b6f05.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;玩机 • Android（一）——应用篇&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://hoshizora.tw/posts/fab8c3b3.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;玩机 • Android（二）——ROOT 篇&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Android 有两个模式：Recovery 和 Bootloader，也叫卡刷模式和线刷模式（部分手机可能不一样，功能都差不多）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://cxyzzz.gtihub.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>玩机 • Android（二）——ROOT 篇</title>
    <link href="https://cxyzzz.gtihub.io/posts/fab8c3b3.html"/>
    <id>https://cxyzzz.gtihub.io/posts/fab8c3b3.html</id>
    <published>2018-10-27T05:15:56.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Root-Android"><a href="#Root-Android" class="headerlink" title="Root (Android)"></a>Root (Android)</h2><p>首先来了解一下 ROOT 是什么：</p><blockquote><p>Root 是 Android 系统的一个术语，它使得用户可以获取 Android 操作系统的超级用户权限。Root 能够帮助用户越过手机制造商的限制，得以卸载本身预装的程序，或运行需要系统权限的动作。Android 系统的 Root 与苹果 iOS 系统的越狱类似。</p><footer><strong>wikipedia</strong><cite><a href="https://zh.wikipedia.org/zh-hans/ROOT_(Android)" rel="external nofollow noopener noreferrer" target="_blank">ROOT_(Android)</a></cite></footer></blockquote><p></p><a id="more"></a><p>简单点说就是当你拥有了 ROOT 权限你才能对你的手机想干嘛就干嘛。当然权利越大责任也越大，也意味着会面对更大的风险。因为 ROOT 是非官方行为，所以很多手机产商对 ROOT 后的手机不提供免费维修服务。现在大多数手机均加入了分区保护，未解锁 Bootloader 的情况下无法进行 ROOT 或刷机操作。</p><p>ROOT 的原理其实是通过系统漏洞或官方后门将 SU 可执行文件复制到 Android 系统的 /system 分区下。为了让用户使用 ROOT 权限，防止手机上任意软件获取 ROOT 权限还需安装一个权限管理软件进行管理。目前主流的超级权限管理工具非 Magisk 和 SuperSU 莫属了。还有如 MIUI、Flyme 以及部分类原生系统自带 ROOT。</p><h2 id="获取-ROOT"><a href="#获取-ROOT" class="headerlink" title="获取 ROOT"></a>获取 ROOT</h2><p>获取 ROOT 权限大致有三种方法。一是通过系统漏洞或官方后门通过软件获取，一是直接在刷机包中内置，再就是通过 Recovery 刷入特定的刷机包。最后一种方法应该是用的最广泛也是最简单的了。使用 Recovery 获取 ROOT 需要第三方 Recovery，有 Bootloader 锁的手机还需先解锁。第三方 Recovery 有 TWRP、CWM 等。前面说过 超级权限管理工具有 Magisk 和 SuperSU，它们均提供了对应的卡刷包，刷入即可获取 ROOT 权限。其中 Magisk 并不仅仅只有 ROOT 管理功能，具体将在第三篇中介绍。</p><h3 id="SuperSU"><a href="#SuperSU" class="headerlink" title="SuperSU"></a>SuperSU</h3><p>官网: <a href="http://www.supersu.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.supersu.com/</a></p><p>SuperSU 分 systemless 和 xbin 两种模式，systemless 模式不更该 /system 而是在 /data 目录创建一个 img 文件，在系统启动是加载此文件，好处是不破坏系统，坏处是授权响应慢，可能会因为 SuperSU APP 后台被杀死而无法授权；xbin 模式为将文件写入 /system ，SuperSU APP 将会安装在 /system 目录，需手动对 boot 打补丁，不然会卡开机界面，优点是授权响应快，恢复出厂设置仍能保留 ROOT ，缺点是会破坏系统完整性。官网下载的卡刷包会自动判断使用哪种模式因而不用担心用错。</p><p>卡刷包可在官网下载，进入 Recovery 刷入即可。有时候可能会遇见刷入后桌面不显示 SuperSU APP ，此时可打开拨号程序输入 <code>*#*#1234#*#*</code> ，同理输入这个也可以在桌面隐藏 SuperSU APP。</p><h3 id="Magisk"><a href="#Magisk" class="headerlink" title="Magisk"></a>Magisk</h3><p>MagiskManager: <a href="https://magiskmanager.com/" rel="external nofollow noopener noreferrer" target="_blank">https://magiskmanager.com/</a></p><p>XDA： <a href="https://forum.xda-developers.com/apps/magisk" rel="external nofollow noopener noreferrer" target="_blank">https://forum.xda-developers.com/apps/magisk</a></p><p>Github： <a href="https://github.com/topjohnwu/Magisk/releases" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/topjohnwu/Magisk/releases</a></p><p>Magisk 是一个台湾同胞开发的应用软件，其主要功能是不修改 /system 实现修改的效果，自带了 ROOT 管理。<br>与 SuperSU 一样，需下载卡刷包刷入。卡刷包可在上面三个链接中下载到，也可以直接安装 Magisk Manager APP，然后在 APP 中下载卡刷包。Magisk 与 SuperSU 并不兼容（实际上是因为两个都会修改同一个地方)如果已经刷了 SuperSU 再刷 Magisk 时会出错，此时去 SuperSU 设置中清除 SuperSU 即可（也可以刷入官方 boot）。</p><p>最后还是那句话：权利越大，责任越大。如果你不清楚你在干什么那么最好不要授权应用 ROOT 权限。当然也没必要对手机 ROOT 后的安全问题太过担心，只要注意授权管理软件的授权提示不乱给软件权限就没事。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Root-Android&quot;&gt;&lt;a href=&quot;#Root-Android&quot; class=&quot;headerlink&quot; title=&quot;Root (Android)&quot;&gt;&lt;/a&gt;Root (Android)&lt;/h2&gt;&lt;p&gt;首先来了解一下 ROOT 是什么：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Root 是 Android 系统的一个术语，它使得用户可以获取 Android 操作系统的超级用户权限。Root 能够帮助用户越过手机制造商的限制，得以卸载本身预装的程序，或运行需要系统权限的动作。Android 系统的 Root 与苹果 iOS 系统的越狱类似。&lt;/p&gt;&lt;footer&gt;&lt;strong&gt;wikipedia&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/ROOT_(Android)&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ROOT_(Android)&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://cxyzzz.gtihub.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>VS Code 配置 C 和 C++ 环境</title>
    <link href="https://cxyzzz.gtihub.io/posts/d5ae7f1b.html"/>
    <id>https://cxyzzz.gtihub.io/posts/d5ae7f1b.html</id>
    <published>2018-09-18T14:18:05.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>Visual Studio Code (简称 VS Code/VSC)是一款免费开源的代码编辑器，支持几乎所有的主流开发语言，有语法高亮、智能代码补全、自定义热键、符号自动补全、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展。软件支持 Windows、Mac 以及 Linux。</p><p>官网：<a href="https://code.visualstudio.com/" rel="external nofollow noopener noreferrer" target="_blank">https://code.visualstudio.com/</a><br><img alt="vscode" data-src="https://i.loli.net/2019/06/08/5cfb5b61c8e8413483.jpg"></p><a id="more"></a><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>VS Code 可在官网下载，其只是一个编辑器并不是 IDE，不含编译器因而需要我们自己安装编译器。<br>编译器我选的是 GCC/G++ 配合 clang 使用，Windows 也可选 MSVC ，Mac 可选 clang 。以 Windows 为例。需去下载 MinGW-w64 和 LLVM 。</p><ul><li>LLVM Download Page: <a href="http://releases.llvm.org/download.html" rel="external nofollow noopener noreferrer" target="_blank">http://releases.llvm.org/download.html</a> 选Pre-Built Binaries中的Clang for Windows (64-bit)，不需要下.sig文件.</li><li>MinGW-w64: <a href="https://sourceforge.net/projects/mingw-w64/" rel="external nofollow noopener noreferrer" target="_blank">https://sourceforge.net/projects/mingw-w64/</a> 直接点 Download 即可。</li></ul><p>下载好后安装，添加环境变量时选第二项，安装位置选个你能找到的，后面会用到。<br><img alt="llvm" data-src="https://i.loli.net/2019/06/08/5cfb5b33bb73768144.jpg"></p><p>安装完了以后可能会弹出 cmd 说 MSVC integration install failed。这个是因为 Clang 默认使用的是 msvc 的工具链，而我们选择的工具链是 MinGW，所以就不用管这个提示。</p><p>MinGW随便装哪，Architecture 选 x86_64，装好以后把东西全部复制到 Clang的文件夹里去，他们会无冲突合并。同样，不做这一步也行，下面的配置里路径就自己改，还要手动把 MinGW 的 bin 文件夹加到 path 中，因为MinGW 不会自己加。至于为什么既要装 Clang 又要装 MinGW，是因为 Clang 没有头文件。然后就可以把 MinGW 删了（Uninstall.exe）。不建议安装多个MinGW，如果你安装了其他 IDE 需要注意把其他的 MinGW 从环境变量中去掉；也可以自己把他们的编译器设为 Clang。因为几乎所有的轻量级 IDE 用的都是MinGW 或 TDM-GCC，它们不制造编译器，只是打包了一个。ps:MinGW 安装时需要在线下载，可能需要科学上网。</p><p>弄好后可打开 CMD 输入 clang -v 和 gcc -v 应该显示图中内容（版本号不同没事）。如果没有显示就是环境没配置好，可以手动添加到 path （如何配置请自行百度），也可重复上面的操作。<br><img alt="test" data-src="https://i.loli.net/2019/06/08/5cfb5b33e542735446.jpg"></p><h2 id="配置-VS-Code"><a href="#配置-VS-Code" class="headerlink" title="配置 VS Code"></a>配置 VS Code</h2><h3 id="安装扩展"><a href="#安装扩展" class="headerlink" title="安装扩展"></a>安装扩展</h3><p>需要安装的扩展：</p><ul><li><code>C/C++</code></li><li><code>C/C++ Clang Command Adapter</code> 提供静态检测（Lint），很重要。</li><li><code>Code Runner</code> 添加右键编译运行代码，支持大多数语言。</li></ul><p>附：我的插件列表</p><ul><li><code>background</code> 修改 VS Code 背景</li><li><code>Bracket Pair Colorizer</code> 彩色花括号</li><li><code>C/C++ Snippets</code> 代码片段</li><li><code>Code Speel Checker</code> 规范命名用</li><li><code>filesize</code> 在左下角显示文件大小</li><li><code>Include Autocomplete</code> 提供头文件名字的补全</li><li><code>One Dark Pro</code> VS Code 主题</li><li><code>Setting Sync</code> 同步 VS Code 扩展、设置、代码片段到 GitHub Gist。</li><li><code>VSCode Great Icons</code> VS Code 文件夹图标</li></ul><h3 id="配置四个-json-文件"><a href="#配置四个-json-文件" class="headerlink" title="配置四个 json 文件"></a>配置四个 json 文件</h3><p>先新建一个用来存放代码的文件夹（工作区)，路径不能包含中文、空格和引号。打开 VS Code 选打开文件夹，选择刚刚创建的文件夹，点击 VS Code 的新建文件夹创建 .vscode 文件夹。（这么做是因为 Windows 资源管理器不允许创建 . 开头的文件夹），然后分别创建 c_cpp_properties.json 、launch.json 、tasks.json 和 settings.json。</p><h4 id="配置-c-cpp-properties-json"><a href="#配置-c-cpp-properties-json" class="headerlink" title="配置 c_cpp_properties.json"></a>配置 c_cpp_properties.json</h4><details><summary>点击查看文件详细信息</summary><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Win32"</span>,</span><br><span class="line">            <span class="attr">"intelliSenseMode"</span>: <span class="string">"clang-x64"</span>,</span><br><span class="line">            <span class="attr">"includePath"</span>: [</span><br><span class="line">                <span class="string">"${workspaceFolder}"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/include"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/x86_64-w64-mingw32/include"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++"</span>,</span><br><span class="line">                <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/tr1"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"defines"</span>: [</span><br><span class="line">                <span class="string">"_DEBUG"</span>,</span><br><span class="line">                <span class="string">"UNICODE"</span>,</span><br><span class="line">                <span class="string">"__GNUC__=7"</span>,</span><br><span class="line">                <span class="string">"__cdecl=__attribute__((__cdecl__))"</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">"browse"</span>: {</span><br><span class="line">                <span class="attr">"path"</span>: [</span><br><span class="line">                    <span class="string">"${workspaceFolder}"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/include"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/x86_64-w64-mingw32/include"</span>,</span><br><span class="line">                    <span class="string">"C:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include-fixed"</span></span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">"limitSymbolsToIncludedHeaders"</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">"databaseFilename"</span>: <span class="string">""</span></span><br><span class="line">            },</span><br><span class="line">            <span class="attr">"compilerPath"</span>: <span class="string">"C:\\Program Files\\LLVM\\bin\\gcc.exe"</span>,</span><br><span class="line">            <span class="attr">"cStandard"</span>: <span class="string">"c11"</span>,</span><br><span class="line">            <span class="attr">"cppStandard"</span>: <span class="string">"c++17"</span></span><br><span class="line">        }</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"version"</span>: <span class="number">4</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></details><p>可参考 <a href="https://github.com/Microsoft/vscode-cpptools/blob/master/Documentation/LanguageServer/MinGW.md" rel="external nofollow noopener noreferrer" target="_blank">Microsoft/vscode-cpptools</a> 如果没有合并 LLVM 和 MinGW 则 compilerPath 需要改成 MinGW gcc.exe 的路径。Windows 的路径是反斜杠需要使用两个反斜杠来转义，直接使用斜杠也行。includePath 和 browse 中的 path 均为头文件所在路径。ps:偶尔可能会出现提示找不到头文件但能正常编译运行。</p><h4 id="配置-launch-json"><a href="#配置-launch-json" class="headerlink" title="配置 launch.json"></a>配置 launch.json</h4><details><summary>点击查看文件详细信息</summary><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md</span><br><span class="line">{</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        {</span><br><span class="line">            "name": "C Launch", //C 语言调试配置名称</span><br><span class="line">            "type": "cppdbg", // 配置类型，这里只能为cppdbg</span><br><span class="line">            "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）</span><br><span class="line">            "program": "${fileDirname}/${fileBasenameNoExtension}.exe", // 将要进行调试的程序的路径</span><br><span class="line">            "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可</span><br><span class="line">            "stopAtEntry": false, // 设为true时程序将暂停在程序入口处</span><br><span class="line">            "cwd": "${workspaceFolder}", // 调试程序时的工作目录</span><br><span class="line">            "environment": [], // （环境变量？）</span><br><span class="line">            "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台</span><br><span class="line">            "internalConsoleOptions": "neverOpen", // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？</span><br><span class="line">            "MIMode": "gdb", // 指定连接的调试器，可以为gdb或lldb。但目前lldb在windows下没有预编译好的版本。</span><br><span class="line">            "miDebuggerPath": "C:/Program Files/LLVM/bin/gdb.exe", // 调试器路径。</span><br><span class="line">            "setupCommands": [</span><br><span class="line">                    {</span><br><span class="line">                        <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                        <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                        <span class="attr">"ignoreFailures"</span>: <span class="literal">true</span></span><br><span class="line">                    }</span><br><span class="line">                ],</span><br><span class="line">            "preLaunchTask": "CCompile", // 调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应</span><br><span class="line">        },</span><br><span class="line"></span><br><span class="line">        {</span><br><span class="line">            "name": "C++ Launch", // C++ 调试配置名称</span><br><span class="line">            "type": "cppdbg", // 配置类型，这里只能为cppdbg</span><br><span class="line">            "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）</span><br><span class="line">            "program": "${fileDirname}/${fileBasenameNoExtension}.exe", // 将要进行调试的程序的路径</span><br><span class="line">            "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可</span><br><span class="line">            "stopAtEntry": false, // 设为true时程序将暂停在程序入口处</span><br><span class="line">            "cwd": "${workspaceFolder}", // 调试程序时的工作目录</span><br><span class="line">            "environment": [], // （环境变量？）</span><br><span class="line">            "externalConsole": true, // 调试时是否显示控制台窗口，一般设置为true显示控制台</span><br><span class="line">            "internalConsoleOptions": "neverOpen", // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡</span><br><span class="line">            "MIMode": "gdb", // 指定连接的调试器</span><br><span class="line">            "miDebuggerPath": "C:/Program Files/LLVM/bin/gdb.exe", // 调试器路径。</span><br><span class="line">            "setupCommands": [</span><br><span class="line">                {</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Enable pretty-printing for gdb"</span>,</span><br><span class="line">                    <span class="attr">"text"</span>: <span class="string">"-enable-pretty-printing"</span>,</span><br><span class="line">                    <span class="attr">"ignoreFailures"</span>: <span class="literal">false</span></span><br><span class="line">                }</span><br><span class="line">            ],</span><br><span class="line">            "preLaunchTask": "C++Compile" // 调试会话开始前执行的任务，一般为编译程序。与tasks.json的label相对应</span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></details><h4 id="配置-tasks-json"><a href="#配置-tasks-json" class="headerlink" title="配置 tasks.json"></a>配置 tasks.json</h4><details><summary>点击查看文件详细信息</summary><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">// https://code.visualstudio.com/docs/editor/tasks</span><br><span class="line">{</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"2.0.0"</span>,</span><br><span class="line">    <span class="attr">"tasks"</span>: [</span><br><span class="line">        {</span><br><span class="line">            "label": "CCompile", // 任务名称，与launch.json的preLaunchTask相对应</span><br><span class="line">            "command": "clang", // 要使用的编译器</span><br><span class="line">            "args": [</span><br><span class="line">                "${file}",</span><br><span class="line">                "-o", // 指定输出文件名，不加该参数则默认输出a.exe</span><br><span class="line">                "${fileDirname}/${fileBasenameNoExtension}.exe",</span><br><span class="line">                "-g", // 生成和调试有关的信息</span><br><span class="line">                "-Wall", // 开启额外警告</span><br><span class="line">                "-static-libgcc", // 静态链接</span><br><span class="line">                "-fcolor-diagnostics",</span><br><span class="line">                "--target=x86_64-w64-mingw", // 默认target为msvc，不加这一条就会找不到头文件</span><br><span class="line">                <span class="string">"-std=c11"</span></span><br><span class="line">            ], // 编译命令参数</span><br><span class="line">            "type": "shell",</span><br><span class="line">            "group": "build",</span><br><span class="line">            "presentation": {</span><br><span class="line">                "echo": true,</span><br><span class="line">                "reveal": "never", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档</span><br><span class="line">                "focus": false,</span><br><span class="line">                "panel": "shared" // 不同的文件的编译信息共享一个终端面板</span><br><span class="line">            }</span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">            "label": "C++Compile", // 任务名称，与launch.json的preLaunchTask相对应</span><br><span class="line">            "command": "clang++", // 要使用的编译器</span><br><span class="line">            "args": [</span><br><span class="line">                "${file}",</span><br><span class="line">                "-o", // 指定输出文件名，不加该参数则默认输出a.exe</span><br><span class="line">                "${fileDirname}/${fileBasenameNoExtension}.exe",</span><br><span class="line">                "-g", // 生成和调试有关的信息</span><br><span class="line">                "-Wall", // 开启额外警告</span><br><span class="line">                "-static-libgcc", // 静态链接</span><br><span class="line">                "-fcolor-diagnostics",</span><br><span class="line">                "--target=x86_64-w64-mingw", // 默认target为msvc，不加这一条就会找不到头文件</span><br><span class="line">                <span class="string">"-std=c++17"</span></span><br><span class="line">            ], // 编译命令参数</span><br><span class="line">            "type": "shell",</span><br><span class="line">            "group": "build",</span><br><span class="line">            "presentation": {</span><br><span class="line">                "echo": true,</span><br><span class="line">                "reveal": "never", // 在“终端”中显示编译信息的策略，可以为always，silent，never。具体参见VSC的文档</span><br><span class="line">                "focus": false, // 设为true后可以使执行task时焦点聚集在终端，但对编译c和c++来说，设为true没有意义</span><br><span class="line">                "panel": "shared" // 不同的文件的编译信息共享一个终端面板</span><br><span class="line">            }</span><br><span class="line">            // "problemMatcher":"$gcc" // 如果你不使用clang，去掉前面的注释符，并在上一条之后加个逗号。)</span><br><span class="line">        }</span><br><span class="line">    ]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></details><h4 id="配置-settings-json"><a href="#配置-settings-json" class="headerlink" title="配置 settings.json"></a>配置 settings.json</h4><details><summary>点击查看文件详细信息</summary><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法交互</span><br><span class="line">    "code-runner.executorMap": {</span><br><span class="line">        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",</span><br><span class="line">        "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++17 && $dir$fileNameWithoutExt"</span><br><span class="line">    }, // 设置code runner的命令行</span><br><span class="line">    "code-runner.saveFileBeforeRun": true, // run code前保存</span><br><span class="line">    "code-runner.preserveFocus": true, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false</span><br><span class="line">    "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息</span><br><span class="line"></span><br><span class="line">    "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）</span><br><span class="line">    "C_Cpp.intelliSenseEngine": "Default", // 可以为Default或Tag Parser，后者较老，功能较简单。具体差别参考cpptools插件文档</span><br><span class="line">    "C_Cpp.errorSquiggles": "Disabled", // 因为有clang的lint，所以关掉</span><br><span class="line">    "editor.formatOnType": true, // 输入时就进行格式化，默认触发字符较少，分号可以触发</span><br><span class="line">    "editor.snippetSuggestions": "top", // snippets代码优先显示补全</span><br><span class="line"></span><br><span class="line">    "clang.cflags": [ // 控制c语言静态检测的参数</span><br><span class="line">        "--target=x86_64-w64-mingw",</span><br><span class="line">        "-std=c11",</span><br><span class="line">        <span class="string">"-Wall"</span></span><br><span class="line">    ],</span><br><span class="line">    "clang.cxxflags": [ // 控制c++静态检测时的参数</span><br><span class="line">        "--target=x86_64-w64-mingw",</span><br><span class="line">        "-std=c++17",</span><br><span class="line">        <span class="string">"-Wall"</span></span><br><span class="line">    ],</span><br><span class="line">    "files.associations": {</span><br><span class="line">        "iostream": "cpp",</span><br><span class="line">        "iomanip": "cpp",</span><br><span class="line">        "array": "cpp",</span><br><span class="line">        "string_view": "cpp",</span><br><span class="line">        "random": "cpp",</span><br><span class="line">        "ostream": "cpp",</span><br><span class="line">        "atomic": "cpp",</span><br><span class="line">        "*.tcc": "cpp",</span><br><span class="line">        "cctype": "cpp",</span><br><span class="line">        "chrono": "cpp",</span><br><span class="line">        "clocale": "cpp",</span><br><span class="line">        "cmath": "cpp",</span><br><span class="line">        "complex": "cpp",</span><br><span class="line">        "condition_variable": "cpp",</span><br><span class="line">        "cstdint": "cpp",</span><br><span class="line">        "cstdio": "cpp",</span><br><span class="line">        "cstdlib": "cpp",</span><br><span class="line">        "cstring": "cpp",</span><br><span class="line">        "ctime": "cpp",</span><br><span class="line">        "cwchar": "cpp",</span><br><span class="line">        "cwctype": "cpp",</span><br><span class="line">        "exception": "cpp",</span><br><span class="line">        "fstream": "cpp",</span><br><span class="line">        "initializer_list": "cpp",</span><br><span class="line">        "iosfwd": "cpp",</span><br><span class="line">        "istream": "cpp",</span><br><span class="line">        "limits": "cpp",</span><br><span class="line">        "memory": "cpp",</span><br><span class="line">        "mutex": "cpp",</span><br><span class="line">        "new": "cpp",</span><br><span class="line">        "numeric": "cpp",</span><br><span class="line">        "ratio": "cpp",</span><br><span class="line">        "sstream": "cpp",</span><br><span class="line">        "stdexcept": "cpp",</span><br><span class="line">        "streambuf": "cpp",</span><br><span class="line">        "system_error": "cpp",</span><br><span class="line">        "thread": "cpp",</span><br><span class="line">        "tuple": "cpp",</span><br><span class="line">        "type_traits": "cpp",</span><br><span class="line">        "typeinfo": "cpp",</span><br><span class="line">        "utility": "cpp"</span><br><span class="line">    },</span><br><span class="line">    "cSpell.language": "en",</span><br><span class="line">    "clang.completion.enable":true // 效果稍好，如果卡，可关掉</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></details><p>建议放置在工作区设置。</p><p>另附个人设置：</p><details><summary>点击查看文件详细信息</summary><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    "editor.fontFamily": "Consolas, 微软雅黑", // 控制编辑器字体</span><br><span class="line">    "workbench.colorTheme": "One Dark Pro", // 主题</span><br><span class="line">    "files.trimTrailingWhitespace": true,</span><br><span class="line">    "sync.gist": "xxxxxxxxxxxxxxxxxxxxx", //settings sync gist</span><br><span class="line">    "sync.lastUpload": "2018-06-24T05:40:57.167Z",</span><br><span class="line">    "sync.forceDownload": false,</span><br><span class="line">    "sync.askGistName": false,</span><br><span class="line">    "sync.removeExtensions": true,</span><br><span class="line">    "sync.syncExtensions": true,</span><br><span class="line">    "workbench.iconTheme": "vscode-great-icons", // 文件夹图标</span><br><span class="line">    "files.autoSave": "afterDelay", // 自动保存方式</span><br><span class="line">    "files.autoSaveDelay": 120000, // 自动保存延迟</span><br><span class="line">    "editor.dragAndDrop": false, // 选中文字后，可以拖动它们调整位置</span><br><span class="line">    "explorer.confirmDragAndDrop": false,</span><br><span class="line">    "explorer.confirmDelete": false,</span><br><span class="line">    "files.autoGuessEncoding": true, // 自动检测文件编码</span><br><span class="line">    "sync.autoDownload": false, // 自动下载备份</span><br><span class="line">    "sync.autoUpload": false, //自动上传备份</span><br><span class="line">    "sync.lastDownload": "",</span><br><span class="line">    "sync.host": "",</span><br><span class="line">    "sync.pathPrefix": "",</span><br><span class="line">    "sync.quietSync": false,</span><br><span class="line">    "cSpell.language": "en",</span><br><span class="line">    "editor.multiCursorModifier": "ctrlCmd",</span><br><span class="line">    "git.ignoreMissingGitWarning": true,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></details><h3 id="开始写代码"><a href="#开始写代码" class="headerlink" title="开始写代码"></a>开始写代码</h3><p>新建一个文件，后缀视语言而定，C 语言为 .c (使用 .cpp 也能运行，但不建议)，C++ 为 .cpp。点击上部分 终端-运行生成任务 （Ctrl + Shift + B)进行编译,Ctrl + F5 只运行。也可按 F5 启用调试。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>VS Code 本身只是个文本编辑器，其他功能都是靠扩展实现的。要实现某个功能必须进行配置才能使用。VS Code 本身颜值很高，相比于 VS 动辄几 G 来说体积也不是很大，运行过程中占用的内存也不多且支持大多数语言。</p><p>参考链接:</p><ul><li><a href="https://www.zhihu.com/question/30315894" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/30315894</a></li><li><a href="https://blog.csdn.net/u013322949/article/details/60339735" rel="external nofollow noopener noreferrer" target="_blank">https://blog.csdn.net/u013322949/article/details/60339735</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Visual Studio Code (简称 VS Code/VSC)是一款免费开源的代码编辑器，支持几乎所有的主流开发语言，有语法高亮、智能代码补全、自定义热键、符号自动补全、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展。软件支持 Windows、Mac 以及 Linux。&lt;/p&gt;&lt;p&gt;官网：&lt;a href=&quot;https://code.visualstudio.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://code.visualstudio.com/&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/06/08/5cfb5b61c8e8413483.jpg&quot; alt=&quot;vscode&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://cxyzzz.gtihub.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>玩机 • Android（一）——应用篇</title>
    <link href="https://cxyzzz.gtihub.io/posts/9e7b6f05.html"/>
    <id>https://cxyzzz.gtihub.io/posts/9e7b6f05.html</id>
    <published>2018-07-22T05:45:34.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><img height="100" width="100" data-src="https://i.loli.net/2018/09/11/5b978bf25c9c3.png"><a id="more"></a> 闲来无事，写几篇水文。仅为我个人玩机经历，如果觉得对，欢迎参考，如果不对，请无视。全文分为 [应用篇](#apps)、Root 篇 和 进阶篇。<p><span id="apps"></span></p><div class="note info"><p>应用前带 [root] 为需 root 权限应用，红色标记为可能会对设备造成损害的应用。黄色标记为需翻墙应用。大部分均可在酷安下载。</p></div><h2 id="酷安-发现应用的乐♂趣"><a href="#酷安-发现应用的乐♂趣" class="headerlink" title="酷安 发现应用的乐♂趣"></a><a href="https://www.coolapk.com/" rel="external nofollow noopener noreferrer" target="_blank">酷安</a> 发现应用的乐♂趣<img id="github-emoji" height="25" width="25" data-src="https://i.loli.net/2019/06/08/5cfb5df7b796d58009.jpg"></h2><p>酷安算是一个不错的应用市场，有很多酷友自己开发的软件，很多大佬交流分享经验。虽然因为越做越大，出现了部分不好的现象，但总体环境还是很好的。特别值得关注的是软件的评论区，多逛逛往往会有很多收获。<br><img alt="coolapk" data-src="https://i.loli.net/2019/06/08/5cfb5df8ecd1078695.jpg"></p><h2 id="fooView"><a href="#fooView" class="headerlink" title="fooView"></a><a href="https://www.coolapk.com/apk/com.fooview.android.fooview" rel="external nofollow noopener noreferrer" target="_blank">fooView</a></h2><p>借用小编的一段话：一款功能十分强大的浮动按钮，各种操作均可用手势完成，单手操作毫不费劲，使用起来也相当智能，毕竟和原来的操作方式有很大改变，需要时间适应，但适应后很可能就停不下来了，总之值得细细把玩一番。<br><img alt="fooView" data-src="https://i.loli.net/2019/06/08/5cfb5dfa7d1ba49843.jpg"><br>fooView 集成了 应用启动器、文件管理器、图片浏览（编辑）器、录屏、长截图、屏幕取词及分词、OCR、浏览器（带去广告b及多线程下载器）、FTP/S 服务及客户端、SFTP、SMB、WebDAV 客户端等等多个功能。足以应付日常使用。可添加自定义任务实现部分 Tasker 的功能，如定时提醒喝水，定时显示天气等等。总而言之是一款功能十分强大的浮动按钮。</p><h2 id="Via-浏览器"><a href="#Via-浏览器" class="headerlink" title="Via 浏览器"></a><a href="https://www.coolapk.com/apk/mark.via" rel="external nofollow noopener noreferrer" target="_blank">Via 浏览器</a></h2><p>via 浏览器是酷友的作品，注重浏览体验，干净利落，化繁为简，简约而不简单。apk 体积仅 503KB 安装后也才 17M ，这相比于其他浏览器动辄上百 M 占用，真的是小太多了。当然 via 小也是有原因的，因为它不带内核，调用的是系统的 WebView，对于系统较新或者能更新 WebView 的手机来说很好，如果是系统比较老的建议使用 <a href="https://www.coolapk.com/apk/com.quark.browser" rel="external nofollow noopener noreferrer" target="_blank">夸克</a> （UC 团队的作品，也很不错）。</p><ul><li><p>功能：</p><ol><li>没有开屏广告，没有新闻推荐，没有广告植入等等一切和浏览器无关的功能。安安静静的做一个浏览器。</li><li>支持书签云同步</li><li>支持去广告（可手动标记或同步现成的规则，也可使用 via 的 hosts 拦截）</li><li>支持油猴脚本（油猴脚本大多数均为电脑界面，手机上使用可能会不兼容）</li><li>支持自定义浏览器标示，查看源码，查看网络日志，资源嗅探（可调用 ADM 下载或 MXplayer 在线播放）。</li><li>自定义主页：支持使用 HTML 代码以及 CSS 进行美化，也可使用完整的 html 网页（下图使用的就是 html 文件为主页）</li></ol></li><li><p>缺点： 依赖于系统 WebView 因而不像 QQ 浏览器， UC 浏览器等自带内核浏览器功能多。如 视频播放无法手势控制、悬浮播放。没有账号密码自动填写（作者说会解决）</p></li></ul><p><img alt="Via" data-src="https://i.loli.net/2019/06/08/5cfb5e794404686948.jpg"></p><p>注：via 使用二维码扫描需勾选 via设置-插件-二维码扫描 按提示下载安装 <a href="https://www.coolapk.com/apk/mark.qrcode" rel="external nofollow noopener noreferrer" target="_blank">二维码扫描</a> 软件即可。下载管理默认使用系统内置下载器，可勾选 via设置-插件-下载管理 启用 ADM 下载器。</p><p>附：</p><ul><li><p><a href="http://via-app.cn/via" rel="external nofollow noopener noreferrer" target="_blank">via 可用脚本及部分主页</a></p></li><li><p>ADM 下载器 <code>https://www.coolapk.com/apk/com.dv.adm.pay</code> 复制链接到 酷安 客户端打开。</p></li><li><p>主页文件（与图中有部分差异）链接:<code>https://pan.baidu.com/s/1tMZ8Eie_ewVKSIMtLdnpoQ</code> 密码:<code>2htc</code></p></li></ul><h2 id="黑阈"><a href="#黑阈" class="headerlink" title="黑阈"></a><div class="note danger"><p><a href="https://www.coolapk.com/apk/me.piebridge.brevent" rel="external nofollow noopener noreferrer" target="_blank">黑阈</a></p></div></h2><p>对付毒瘤的一大神器，可控制 APP 权限，冻结 APP。需使用 ADB 或 root 开启。免费版有很大限制，支付 5$ 开启所有功能。<a href="https://jianyu.io/br/price.zh.html" rel="external nofollow noopener noreferrer" target="_blank">黑阈版本与价格</a> 作者会不定时进行活动，可关注其酷安动态。</p><p><img alt="brevent" data-src="https://i.loli.net/2019/06/08/5cfb5e9153b2e47947.jpg"></p><p>附：<a href="https://jianyu.io/br/br.pdf" rel="external nofollow noopener noreferrer" target="_blank">黑阈使用说明书</a> （PDF 文件，点击即可下载。强烈建议初次使用时先看一遍）</p><p><span id="jump"></span></p><h2 id="root-My-Android-Tools"><a href="#root-My-Android-Tools" class="headerlink" title="[root]My Android Tools"></a>[root]<a href="https://www.coolapk.com/apk/cn.wq.myandroidtools" rel="external nofollow noopener noreferrer" target="_blank">My Android Tools</a></h2><p>一款神器，能干的事情很爽，遇到一些个流氓app，这东西有用。My Android Tools 可以禁用应用的组件如 服务、广播接收器和活动 等。服务即为我们所用的功能，广播接受器负责接收系统的状态等等，而活动都是在我们使用过程中才启动。活动除了广告活动（带 AD、advertising 字样的 activity ，注意区分 download 等活动）一般不用去禁用，即便禁了效果也不大。主要要禁用的是活动和广播接收器。ps：禁用广告需使用 Pro 版</p><ul><li><p>广播接收器</p><p>如果某个应用你不想让它推送消息那么可以把广播接收器全部禁用了，大多数应用的广播接收器都可以全部禁用（不推荐）。当然最好是针对某一个进行禁用，如 带 boot 的大多为开机自启，对于不需要开机自启的软件可以禁用。带 push 的均为消息推送，保留一个就行（如果软件同时支持 FCM 和国内推送服务且手机装了 Google 服务建议保留 GCM 和一个国内推送服务，MIUI 用户建议保留 Mipush）。</p></li><li><p>服务</p><p>这个是重点，对付毒瘤软件有奇效。现在很多应用都变得越来越臃肿。拿 QQ<br>来说，运行时内存占用可达 三四百M ，但这里面又有多少是我们真正需要的呢？而使用 My Android Tools 进行调校后 QQ 仅仅占用 30M 左右，并且没有任何功能损失。在广播接受器中说过关闭消息推送，但最有效的还是 服务 和 广播接收器 一起禁用。国内消息推送服务各自为营，为了保活不择手段，当然这是厂商为了保证消息能及时准确推送到用户手里设置的，但这样手机就遭殃了。每打开一个应用就会启动一个推送服务，而推送服务一直挂在后台，部分推送服务甚至会唤醒用户未打开的应用，被唤醒应用又会唤醒其他未打开应用。这就是为什么一打开 xx软件 然后看下后台全家桶全被打开了的原因。国内推送服务有 腾讯的 XG、小米的 XMPush、华为的 HuaweiPush、魅族的 MeizuPush、个推的 gtpush、极光的 jpush、OPPO（coloros）、阿里、百度等等厂商的推送服务。还有 融云 sdk（rong）、个推 sdk（igexin）、友盟 sdk（umeng）等也提供了推送服务。其中支持 XMPush 的应用最多，体验也更接近于 FCM。Android 的 FCM 消息推送其实是很不错的，然而国情所限，体验并没有本土推送服务好。禁用推送服务时可直接搜索 push 展开服务全名进行禁用即可。</p></li></ul><p>My Android Tools 可以备份还原自己的禁用列表，也可使用他人分享的备份文件进行恢复。部分组件可能会自动恢复需辅助使用 <a href="https://www.coolapk.com/apk/cn.wq.myandroidtoolsxposed" rel="external nofollow noopener noreferrer" target="_blank">My Android Tols Xposed</a> ，此为 Xposed 模块，在第三篇中会介绍如何使用 Xposed 模块，此处不做过多介绍。<br><img alt="myandroidtools" data-src="https://i.loli.net/2019/06/08/5cfb5eb468b7093584.jpg"></p><h2 id="root-AppOpsX"><a href="#root-AppOpsX" class="headerlink" title="[root]AppOpsX"></a>[root]<a href="https://github.com/linusyang92/AppOpsX" rel="external nofollow noopener noreferrer" target="_blank">AppOpsX</a></h2><p>此为 AppOpsX 加入 IFW 支持，原版只含 appops（权限管理）。可限制软件调用权限（即便运行软件时允许权限，若 AppOps 禁止则实际仍为禁止) 软件使用需将其安装为系统程序。（使用前建议查看项目 REANME）<br><img alt="AppOpsX" data-src="https://i.loli.net/2019/06/08/5cfb5ecd254ea43307.jpg"></p><p>在设置中可开启 Intent 防火墙，默认长按显示服务，之后的使用方法与 <a href="#jump">My Android Tools</a> 无异。效果与 My Android Tools一样，甚至更好。My Android Tools 的配置可转换为 IFW 配置。<a href="https://github.com/apkjam/MAT2IFW" rel="external nofollow noopener noreferrer" target="_blank">转换项目地址</a></p><h2 id="Tasker"><a href="#Tasker" class="headerlink" title="Tasker"></a>Tasker</h2><p><code>https://www.coolapk.com/apk/net.dinglisch.android.taskerm</code> 复制链接使用酷安客户端打开。</p><p>一款系统增强型的软件，可以实现多种自动控制场景，功能非常强大。有一定上手难度，不过好在可以导入别人制作好的配置文件。</p><p><img alt="Tasker" data-src="https://i.loli.net/2019/06/08/5cfb5ee82312876735.jpg"></p><h2 id="Shadowsocks-SSR"><a href="#Shadowsocks-SSR" class="headerlink" title="Shadowsocks/SSR"></a><div class="note warning"><p>Shadowsocks/SSR</p></div></h2><p>这两个不用多说，爬墙必备工具。</p><h2 id="锤子BigBang"><a href="#锤子BigBang" class="headerlink" title="锤子BigBang"></a><a href="https://www.coolapk.com/apk/com.forfan.bigbang" rel="external nofollow noopener noreferrer" target="_blank">锤子BigBang</a></h2><p>来自于锤子手机 BigBang 功能，但和锤子手机并没有关系。可以全局复制文字，将文字拆分成词组，随意编辑、拖拽组合，提高效率! 单击、双击、长按、复制等多种选词方式随心选。包含翻译、OCR 取词、区域截图、剪贴板等功能。个人觉得分词功能比 fooView 好用。<br><img alt="BigBang" data-src="https://i.loli.net/2019/06/08/5cfb5dfa6617a57290.jpg"></p><h2 id="MT管理器-2-0"><a href="#MT管理器-2-0" class="headerlink" title="MT管理器 2.0"></a><a href="https://www.coolapk.com/apk/bin.mt.plus" rel="external nofollow noopener noreferrer" target="_blank">MT管理器 2.0</a></h2><p>一款强大的文件管理工具和APK逆向修改神器。普通文件管理器的功能都有，特色功能为 APK 编辑功能，主要有 DEX 编辑，ARSC 编辑，XML 编辑，APK 签名、APK 优化、APK 共存、去除签名校验、RES 资源混淆、RES 反资源混淆、翻译模式等。APK 编辑免费用户有部分限制。</p><p><img alt="MT" data-src="https://i.loli.net/2019/06/08/5cfb5f1d3a3d544252.jpg"></p><h2 id="Telegram-https-telegram-org"><a href="#Telegram-https-telegram-org" class="headerlink" title="Telegram https://telegram.org"></a><div class="note warning"><p>Telegram <a href="https://telegram.org" rel="external nofollow noopener noreferrer" target="_blank">https://telegram.org</a></p></div></h2><p>俄罗斯的一款加密即时聊天软件，具有高度保密性。</p><h2 id="FastHub"><a href="#FastHub" class="headerlink" title="FastHub"></a><a href="https://github.com/k0shk0sh/FastHub" rel="external nofollow noopener noreferrer" target="_blank">FastHub</a></h2><p>一款开源的 GitHub 客户端。界面很简洁，该有的功能都有。<br><img alt="FastHub" data-src="https://i.loli.net/2019/06/08/5cfb5f3b3d58236825.jpg"></p><h2 id="Mobilism"><a href="#Mobilism" class="headerlink" title="Mobilism"></a><a href="https://forum.mobilism.org/index.php" rel="external nofollow noopener noreferrer" target="_blank">Mobilism</a></h2><p>国外知名破解软件站点，发布更新各种破解付费/去广告软件（国外软件居多）。下载需翻墙。</p><p><img alt="Mobilism" data-src="https://i.loli.net/2019/06/08/5cfb5f3c1600754235.jpg"></p><h2 id="SD-Maid"><a href="#SD-Maid" class="headerlink" title="SD Maid"></a><a href="https://www.coolapk.com/apk/eu.thedarken.sdm" rel="external nofollow noopener noreferrer" target="_blank">SD Maid</a></h2><p>一款很不错的 SD 卡清理工具。授予 root 权限后效果更好。</p><p><img alt="SD Maid" data-src="https://i.loli.net/2019/06/08/5cfb5f3c8d9d787786.jpg"></p><h2 id="存储空间清理"><a href="#存储空间清理" class="headerlink" title="存储空间清理"></a><a href="https://www.coolapk.com/apk/com.ktls.fileinfo" rel="external nofollow noopener noreferrer" target="_blank">存储空间清理</a></h2><p>与 SD Maid 各有优劣。高级功能需付费 3元。</p><p><img alt="fileinfo" data-src="https://i.loli.net/2019/06/08/5cfb5f779702e75148.jpg"></p><h2 id="BusyBox"><a href="#BusyBox" class="headerlink" title="BusyBox"></a><a href="https://www.coolapk.com/apk/stericson.busybox" rel="external nofollow noopener noreferrer" target="_blank">BusyBox</a></h2><p>Linux 工具里的瑞士军刀,集成了三百多个最常用Linux命令和工具。有无 root 权限均可安装，root 下安装操作不当可能会导致系统无法启动。MIUI 自带 busybox （非最新）。</p><p><img alt="BusyBox" data-src="https://i.loli.net/2019/06/08/5cfb5f79416ad74300.jpg"></p><h2 id="root-钛备份"><a href="#root-钛备份" class="headerlink" title="[root]钛备份"></a>[root]钛备份</h2><p><code>https://www.coolapk.com/apk/com.keramidas.TitaniumBackup</code><br>复制链接使用酷安 app 打开。<br>非常强悍的程序和系统备份工具,需安装 BusyBox ，可备份到 Google Drive、Dropbox（需开启增强版）。部分功能需付费。</p><p><img alt="TitaniumBackup" data-src="https://i.loli.net/2019/06/08/5cfb5f7943d0974266.jpg"></p><h2 id="Termux"><a href="#Termux" class="headerlink" title="Termux"></a><a href="https://www.coolapk.com/apk/com.termux" rel="external nofollow noopener noreferrer" target="_blank">Termux</a></h2><p>一个强大的终端模拟器，可使用 pkg 及 apt 包管理器。</p><p><img alt="Termux" data-src="https://i.loli.net/2019/06/08/5cfb5f795eb5e93872.jpg"></p><h2 id="root-3C-Toolbox"><a href="#root-3C-Toolbox" class="headerlink" title="[root] 3C Toolbox"></a><div class="note danger"><p>[root] <a href="https://www.coolapk.com/apk/ccc71.at" rel="external nofollow noopener noreferrer" target="_blank">3C Toolbox</a></p></div></h2><p>一个非常实用的工具箱，包含多个功能。</p><p><img alt="3C Toolbox" data-src="https://i.loli.net/2019/06/08/5cfb5fe9c017513285.jpg"></p><p>优秀的软件太多太多，这里只写了一部分我正在使用的，并不代表只有这些。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://i.loli.net/2018/09/11/5b978bf25c9c3.png&quot; height=&quot;100&quot; width=&quot;100&quot;&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://cxyzzz.gtihub.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>使用 Mentohust 代替锐捷进行校园网认证</title>
    <link href="https://cxyzzz.gtihub.io/posts/2443be7d.html"/>
    <id>https://cxyzzz.gtihub.io/posts/2443be7d.html</id>
    <published>2018-06-21T12:07:41.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p>使用 <a href="https://baike.baidu.com/item/mentohust/11049624" rel="external nofollow noopener noreferrer" target="_blank">Mentohust</a> 代替锐捷进行认证。mentohust 有多个平台，此处只讲在路由器上使用。大多数第三方固件均已集成了 Mentohust，如果没有集成的话可自行安装。不想用第三方固件或者不会刷固件可以购买极路由，官方自带锐捷认证。</p><a id="more"></a><p>使用 mentohust 需要安装三个软件包，libpcap.ipk、luci-app-mentohust.ipk、mentohust.ipk。其中 luci-app-mentohust.ipk 为 web 管理，可不安装。mentohust.ipk 包也可直接使用 mentohust 二进制包使用命令行运行。软件包需要对应路由器 cpu 架构，此处不提供文件，需自行解决，若实在找不到可在评论留言，我有时间会帮忙编译。</p><p>部分项目地址：</p><ul><li><a href="https://github.com/hyrathb/mentohust" rel="external nofollow noopener noreferrer" target="_blank">mentohust 加入 v4 支持</a></li><li><a href="https://github.com/ptpt52/com.ptpt52.openwrt" rel="external nofollow noopener noreferrer" target="_blank">com.ptpt52.openwrt</a> 含 luci-app-mentohust，mentohust-proxy</li></ul><p>mentohust 所有参数可在终端输入 <code>mentohust -h</code> 查看，输入后显示以下内容：</p><p><img alt="mentohust" data-src="https://i.loli.net/2019/06/08/5cfb5bfcbe79f16881.jpg"></p><p>或者直接在 webui 填写 （此为本人所有参数仅供参考）：</p><p><img alt="mentohust" data-src="https://i.loli.net/2019/06/08/5cfb5c28f089313758.jpg"><br>其中 用户名填：<code>学号@运营商</code> 移动宽带则为移动，电信填电信，联通可直接使用学号。密码为 <code>宽带密码即使用锐捷客户端认证时的密码</code>,网卡选择 WAN 口网卡（可在 web 界面 网络-接口 查看。其他参数按照上图填写即可。</p><p>也可使用 <a href="https://github.com/updateing/minieap" rel="external nofollow noopener noreferrer" target="_blank">minieap</a> 进行锐捷认证。我没用过这个，故不作太多介绍。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 &lt;a href=&quot;https://baike.baidu.com/item/mentohust/11049624&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Mentohust&lt;/a&gt; 代替锐捷进行认证。mentohust 有多个平台，此处只讲在路由器上使用。大多数第三方固件均已集成了 Mentohust，如果没有集成的话可自行安装。不想用第三方固件或者不会刷固件可以购买极路由，官方自带锐捷认证。&lt;/p&gt;
    
    </summary>
    
      <category term="路由器" scheme="https://cxyzzz.gtihub.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="锐捷" scheme="https://cxyzzz.gtihub.io/tags/%E9%94%90%E6%8D%B7/"/>
    
  </entry>
  
  <entry>
    <title>路由器</title>
    <link href="https://cxyzzz.gtihub.io/posts/5799c0b3.html"/>
    <id>https://cxyzzz.gtihub.io/posts/5799c0b3.html</id>
    <published>2018-06-21T04:20:00.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<p>此为本人用过的路由器部分资源，写出来方便以后需要。</p><a id="more"></a><h2 id="斐讯-k2t"><a href="#斐讯-k2t" class="headerlink" title="斐讯 k2t"></a>斐讯 k2t</h2><p>官方/官改固件锁定了 u-boot 分区，所以无法在官方/官改固件下刷入 breed，如若确实想用官改，建议先刷入 breed 后再刷回官改。</p><h3 id="刷入-breed-方法"><a href="#刷入-breed-方法" class="headerlink" title="刷入 breed 方法"></a>刷入 breed 方法</h3><ol><li><p>刷入 ptpt52 的解锁 u-boot openwrt 固件</p><p>特制固件下载地址：<a href="https://router-sh.ptpt52.com/rom/openwrt-k2t-initramfs-factory-uboot-unlock.bin" rel="external nofollow noopener noreferrer" target="_blank">openwrt-k2t-initramfs-factory-uboot-unlock.bin</a><br>解锁 uboot，只用做刷机过渡版本（过渡版本无线不工作，正式版才有无线），不能作为正式使用。</p></li><li><p>开启 telnet，已经开启请忽略这一步，已经刷其他，只要能登录 ssh 或者 telnet 都可以，开启 telnet 参考下面。</p></li><li><p>把 openwrt-k2t-initramfs-factory-uboot-unlock.bin 上传到 /tmp/ 目录下，telnet 或者 ssh 登录后台，执行命令 <code>mtd -r write /tmp/openwrt-k2t-initramfs-factory-uboot-unlock.bin firmware</code> 刷入特制版本固件。</p></li></ol><p>已经是 OpenWrt/LEDE 系统，natcap 系统，直接界面升级就好了，不需要刷，请直接下载另外一个固件，到界面升级就可以：<a href="https://router-sh.ptpt52.com/rom/openwrt-k2t-uboot-unlock.bin" rel="external nofollow noopener noreferrer" target="_blank">openwrt-k2t-uboot-unlock.bin</a></p><p>下载的文件校验 MD5：<br><code>fcbab4d79152aa4de38ee0bdd436883d</code> openwrt-k2t-initramfs-factory-uboot-unlock.bin (解锁 uboot，临时使用，不完整)<br><code>062173c2f254aa425b5649744ca0c92a</code> openwrt-k2t-uboot-unlock.bin (完整固件，解锁 uboot，用于 OpenWrt 界面升级的操作)</p><ol><li><p>进入 openwrt 界面 系统-管理权，开启 ssh 刷入特制版本的 OpenWrt 后，登录界面 <a href="http://192.168.15.1/" rel="external nofollow noopener noreferrer" target="_blank">http://192.168.15.1/</a> 进入 系统-管理权 页面，开启 ssh 登录账号密码 root/admin</p></li><li><p>下载 <a href="https://breed.hackpascal.net/breed-qca9563-phicomm-k2t.bin" rel="external nofollow noopener noreferrer" target="_blank">breed</a>，上传到 /tmp 目录 (注意对比 md5 ，特别是使用多线程下载器的)</p></li><li><p>执行命令 <code>mtd write /tmp/breed-qca9563-phicomm-k2t.bin u-boot</code> 刷入 breed。breed 进入方法为开机时长按 rest 键，直至指示灯闪动，电脑使用网线插 lan 口访问 192.168.1.1 即可进入。在 breed 中可进行固件升级，备份，超频等。</p></li></ol><p>也可参考此<a href="http://www.right.com.cn/forum/forum.php?mod=viewthread&tid=322841&extra=page%3D2%26filter%3Dtypeid%26typeid%3D19" rel="external nofollow noopener noreferrer" target="_blank">教程</a></p><h3 id="官改固件"><a href="#官改固件" class="headerlink" title="官改固件"></a><a href="http://www.right.com.cn/forum/thread-321512-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">官改固件</a></h3><ul><li><p>功能：官方固件去掉部分可以程序，添加 adbyby、koolproxy、S-S/S-S-R、KMS、WOL等功能。SSH（缺省用户名：root，密码 admin），telnet 控制。</p></li><li><p>特点：使用官方驱动，信号比第三方好；</p></li><li><p>缺点：功能少，虽然可以使用 opkg 安装软件包，但得自己修改添加 web 开关。</p></li><li><p><a href="http://www.right.com.cn/forum/thread-321483-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">开启 telnet 方法</a>(2018.06.13 官方升级到 V22.23.1.158 后, 本工具不支持!)</p></li><li><p>刷入方法：</p><ul><li>1、先用上面的工具打开 K2T 的 telnet</li><li>2、用 windows cmd 下的 telnet (默认关闭，需自行开启) 或 putty 连接 K2T。</li><li>3、使 K2T 处于联网状态，在 telnet 中输入如下命令刷入官改版本<br><code>wget http://woo.iytc.net/tools/k2tnew.sh -O - |sh</code><br>（ps:官方/官改固件设置 mentohust 不方便，不推荐在校内做一级路由使用）</li></ul></li><li><p><a href="http://iytc.net/wordpress/?p=3579" rel="external nofollow noopener noreferrer" target="_blank">救砖方法</a>（需要 TTL 转 USB 工具，需拆机，要求一定动手能力。）</p></li></ul><h3 id="Openwrt-LEDE"><a href="#Openwrt-LEDE" class="headerlink" title="Openwrt/LEDE"></a>Openwrt/LEDE</h3><p>Openwrt/LEDE 不用多说，市面上几乎所有固件都是基于其进行的二次开发，得益于开源，有很多使用教程以及软件包。<br>（刷入 openwrt 需先刷 breed。)</p><ul><li><a href="http://www.right.com.cn/forum/forum.php?mod=viewthread&tid=322475&typeid=19" rel="external nofollow noopener noreferrer" target="_blank">ptpt52 Openwrt/LEDE</a></li><li><a href="http://www.right.com.cn/forum/forum.php?mod=viewthread&tid=325321&page=1" rel="external nofollow noopener noreferrer" target="_blank">lean Openwrt</a></li></ul><h3 id="Gargoyle-石像鬼"><a href="#Gargoyle-石像鬼" class="headerlink" title="Gargoyle(石像鬼)"></a>Gargoyle(石像鬼)</h3><p>链接: <a href="https://pan.baidu.com/s/1Et-VEY3kg8GW9jzNno3vbQ" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1Et-VEY3kg8GW9jzNno3vbQ</a> 提取码: <code>fm3k</code><br>此为 lean 发布，暂未开源。石像鬼固件最有特色的便是其自带的 QOS。含 adbyby，openvpn。<br>缺点：安装软件包比较麻烦。</p><h2 id="斐讯K2-PSG1218-64M"><a href="#斐讯K2-PSG1218-64M" class="headerlink" title="斐讯K2(PSG1218-64M)"></a>斐讯K2(PSG1218-64M)</h2><p>Pandavan：<br><a href="https://p4davan.80x86.io/download/" rel="external nofollow noopener noreferrer" target="_blank">荒野无灯</a> <a href="http://www.right.com.cn/forum/thread-187654-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">更新日志</a><br><a href="https://opt.cn2qq.com/padavan" rel="external nofollow noopener noreferrer" target="_blank">hiboyhiboyhiboy</a> <a href="http://www.right.com.cn/forum/thread-161324-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">更新日志</a><br><a href="http://iytc.net/wordpress/?p=1624" rel="external nofollow noopener noreferrer" target="_blank">K2 刷入breed</a><br>另外还有官改固件，但本人觉得最好用的还是 padavan 故未列出。有需要的可自行去恩山查找。</p><h2 id="品胜云座充-ar9331-pinsen"><a href="#品胜云座充-ar9331-pinsen" class="headerlink" title="品胜云座充(ar9331-pinsen)"></a>品胜云座充(ar9331-pinsen)</h2><p>可刷 TP-Link wr-703n v1 固件。具体请看此文 <a href="https://virgo-233.coding.me/Pisen.html#more" rel="external nofollow noopener noreferrer" target="_blank">Pisen云座充</a><br><a href="http://www.right.com.cn/forum/forum.php?mod=viewthread&tid=209145&fromguid=hot&extra=&mobile=2" rel="external nofollow noopener noreferrer" target="_blank">购买地址</a>，裸板，18一块。<br><a href="http://bbs.mydigit.cn/read.php?tid=1031661&ds=1" rel="external nofollow noopener noreferrer" target="_blank">刷 Breed 教程</a><br>hackpascal-Breed：<a href="https://breed.hackpascal.net/" rel="external nofollow noopener noreferrer" target="_blank">作者自建下载服务器</a> && <a href="https://pan.baidu.com/s/1eRCPsMu" rel="external nofollow noopener noreferrer" target="_blank">百度云</a> 密码：3if1 解压密码：baiduqusi<br><a href="http://www.right.com.cn/forum/thread-161906-1-1.html" rel="external nofollow noopener noreferrer" target="_blank">更新日志</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此为本人用过的路由器部分资源，写出来方便以后需要。&lt;/p&gt;
    
    </summary>
    
      <category term="路由器" scheme="https://cxyzzz.gtihub.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>HUT-Email 登录及部分 EDU 邮箱可用福利</title>
    <link href="https://cxyzzz.gtihub.io/posts/f5125d59.html"/>
    <id>https://cxyzzz.gtihub.io/posts/f5125d59.html</id>
    <published>2018-06-17T09:12:31.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="注册登录"><a href="#注册登录" class="headerlink" title="注册登录"></a>注册登录</h2><p>首先感谢 @叶飘零 学长在工大说说里回复了我邮箱账号及密码。</p><p>大一的时候逛学校官网发现可以注册学校的邮箱。</p><a id="more"></a><p><img alt="1" data-src="https://i.loli.net/2019/06/08/5cfb588111a2139961.jpg"><br>然而当点击注册申请后是这样的 <img id="github-emoji" height="50" width="50" data-src="https://i.loli.net/2019/06/08/5cfb58bd9004087432.jpg"><br><img alt="2" data-src="https://i.loli.net/2019/06/08/5cfb58df2b35742858.jpg"><br>点击电子邮箱系统跳转到了腾讯企业邮箱<br>使用学号+身份证后六位登录提示账号或密码错误<br><img alt="3" data-src="https://i.loli.net/2019/06/08/5cfb5907ee8b766866.jpg"><br>我怀疑是密码错误就去工大说说问了下 @叶飘零 学长回复了我账号和密码<br><img alt="4" data-src="https://i.loli.net/2019/06/08/5cfb593e0fe5345173.jpg"><br>使用这个密码去之前的网页登录还是账号或密码错误。细心的同学可以发现学长回复的账号是 学号@stu.hut.edu.cn 而官网上跳转的地址却是 hut.edu.cn 。我们常见的邮箱都是 用户名@邮箱域名 组成，而湖工大官网是 <a href="http://www.hut.edu.cn" rel="external nofollow noopener noreferrer" target="_blank">www.hut.edu.cn</a> 所以我理所当然的以为 mail.hut.edu.cn 就是工大邮箱登录地址，然而实际确是 mail.stu.hut.edu.cn 同样是腾讯企业邮箱。进入 <a href="http://mail.stu.hut.edu.cn" rel="external nofollow noopener noreferrer" target="_blank">http://mail.stu.hut.edu.cn</a> 使用账号 <code>学号@stu.hut.edu.cn</code> 密码 <code>Hut+身份证后六位</code>（不包含 + ）成功登录。<img alt="6" data-src="https://i.loli.net/2019/06/08/5cfb596d06ef699079.jpg"></p><p>下面介绍部分我自己使用的 EDU 邮箱优惠。很多公司(大部分都是国外的) 都对学生提供了优惠，而这个优惠领取方式一般是验证学校账号邮箱或者学号。</p><h2 id="Office-365教育版"><a href="#Office-365教育版" class="headerlink" title="Office 365教育版"></a>Office 365教育版</h2><ul><li>官方网站：<a href="https://portal.office.com/signup?sku=Education" rel="external nofollow noopener noreferrer" target="_blank">https://portal.office.com/signup?sku=Education</a></li></ul><p><img alt="7" data-src="https://i.loli.net/2019/06/08/5cfb59952884189105.jpg"></p><ul><li><p>Office 365 是微软推出的云端 Office，可以让你随时随地在各种设备上工作，在线创建、编辑和共享 Word、PowerPoint、Excel 和 OneNote 文件 。</p></li><li><p>Office 365 教育版是微软专门针对学生和教师推出版本，包括在线Word, Excel, PowerPoint, OneNote, Outlook, Access 及 Publisher 服务，1TB 的 OneDrive 存储空间，可以注册 5 台 PC/Mac 电脑进行使用。</p></li><li><p>使用学校的邮箱进行注册验证之后即可登录</p></li></ul><p><img alt="8" data-src="https://i.loli.net/2019/06/08/5cfb5995c9c8522179.jpg"></p><ul><li>再用账号登录到你的 Onedrive，可以看到容量已经增加到了1024GB了</li></ul><p>注意：管理员可以查看所有成员的文件，而且很多都是共享的。</p><h2 id="GitHub-Student-Developer-Pack"><a href="#GitHub-Student-Developer-Pack" class="headerlink" title="GitHub Student Developer Pack"></a>GitHub Student Developer Pack</h2><p>计算机相关专业的学生都知道 Github 是个好东西，这个就是 Github 提供的学生开发包。<br><img alt="10" data-src="https://i.loli.net/2019/06/08/5cfb5995db23b62920.jpg"></p><ul><li>地址 <a href="https://education.github.com/pack/" rel="external nofollow noopener noreferrer" target="_blank">https://education.github.com/pack/</a></li><li>点击 Get your pack.跳转之后根据提示该登陆登陆，该验证学生邮箱验证。然后再回来看看就发现自己有不少好东西进账了。包里的东西都是针对开发者的，比如 SSL 证书，AWS 70~150$ 额度等等。我只使用了 Github 的私有仓库，其他的请自行探索。</li></ul><h2 id="AutoDesk-Educational-license"><a href="#AutoDesk-Educational-license" class="headerlink" title="AutoDesk Educational license"></a>AutoDesk Educational license</h2><p>可以获得 AutoCAD、3ds Max、Maya 等在内 70 余款软件的 3 年免费使用权。<br>这个对于机械或者土木学院的可能很有用，我专业用不到这些，只进行了注册,没有深入了解。<br><img alt="11" data-src="https://i.loli.net/2019/06/08/5cfb5995d1c3821710.jpg"></p><ul><li>地址：<a href="https://www.autodesk.com/education/free-software/autocad" rel="external nofollow noopener noreferrer" target="_blank">https://www.autodesk.com/education/free-software/autocad</a></li><li>按页面提示注册登录即可。</li></ul><h2 id="JetBrains-Toolbox"><a href="#JetBrains-Toolbox" class="headerlink" title="JetBrains Toolbox"></a>JetBrains Toolbox</h2><p>直接贴官网介绍吧。<br><img alt="12" data-src="https://i.loli.net/2019/06/08/5cfb5995affb747958.jpg"><br><img alt="13" data-src="https://i.loli.net/2019/06/08/5cfb5995abe0497497.jpg"></p><ul><li>地址：<a href="https://www.jetbrains.com/zh/student/" rel="external nofollow noopener noreferrer" target="_blank">https://www.jetbrains.com/zh/student/</a></li><li>点击立即申请，按提示填写信息即可。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;注册登录&quot;&gt;&lt;a href=&quot;#注册登录&quot; class=&quot;headerlink&quot; title=&quot;注册登录&quot;&gt;&lt;/a&gt;注册登录&lt;/h2&gt;&lt;p&gt;首先感谢 @叶飘零 学长在工大说说里回复了我邮箱账号及密码。&lt;/p&gt;&lt;p&gt;大一的时候逛学校官网发现可以注册学校的邮箱。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://cxyzzz.gtihub.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>路由器使用百度云远程下载</title>
    <link href="https://cxyzzz.gtihub.io/posts/cfb7bd2a.html"/>
    <id>https://cxyzzz.gtihub.io/posts/cfb7bd2a.html</id>
    <published>2018-06-13T11:38:46.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><img alt="BaiduDesk" data-src="https://i.loli.net/2019/06/08/5cfb5d6d5fab581544.jpg"></p><a id="more"></a><div class="note info"><p>BaiduPCS-Go 已被百度关注，原作者也准备停止维护了（<a href="https://github.com/iikira/BaiduPCS-Go/issues/643" rel="external nofollow noopener noreferrer" target="_blank">[作者] BaiduPCS-Go 已进入最后的维护阶段，有些话想对你们说 </a>）。目前使用下面方法仍可高速下载，并且不黑号。<a href="https://i.loli.net/2019/02/25/5c73bf0556fdd.png" rel="external nofollow noopener noreferrer" target="_blank"><img alt="Screenshot_20190225_180815.png" data-src="https://i.loli.net/2019/02/25/5c73bf0556fdd.png"></a>图中链接：<a href="http://pcs.baidu.com/rest/2.0/pcs/file?app_id=265486&method=list&path=%2F" rel="external nofollow noopener noreferrer" target="_blank">http://pcs.baidu.com/rest/2.0/pcs/file?app_id=265486&method=list&path=%2F</a><br>快捷脚本见文末</p></div><p>在酷安看见 <a href="https://github.com/iikira/BaiduPCS-Go" rel="external nofollow noopener noreferrer" target="_blank">BaiduPCS-Go</a> (一个命令行界面的百度网盘客户端）,当时只是在手机上体验了下就删掉了。不久前弄了个工控板，第一次接触这个，以为能实现 路由器+NAS+小主机 结果 CPU 不支持虚拟化，虽然也能使用虚拟机，但只能使用 32 位系统，性能损失太大。就只装了一个 OpenWrt。这样配置就有点太奢侈了，95% 以上的性能都处于闲置状态，至少对于校园宽带环境的我来说太奢侈。对群晖的功能有点眼馋，所以想着能不能在 OpenWrt 上实现部分群晖的功能。比如远程下载，私有云存储等。经过一番折腾使用 Frp+BaiduPCS-Go+smaba 也算勉强实现了。</p><ul><li>Frp：一款开源的内网穿透工具，选它的主要原因是配置简单，有很多免费分享的服务器。</li><li>BaiduPCS-Go：仿 Linux shell 文件处理命令的百度网盘命令行客户端.今天的主角就是它了。</li><li>smaba： 用来进行文件共享。也可使用其他同类软件。</li></ul><p>BaiduPCS-Go 使用方法很简单，作者提供了编译好的二进制文件，直接去 <a href="https://github.com/iikira/BaiduPCS-Go/releases" rel="external nofollow noopener noreferrer" target="_blank">realease</a> 页面下载对应架构文件就行。下载后解压，将 BaiduPCS-Go 复制到任意文件夹下即可。使用时须进行登录。</p><ul><li><p>常规登录百度帐号<br>支持在线验证绑定的手机号或邮箱,命令：<br><code>BaiduPCS-Go login</code></p></li><li><p>使用百度 BDUSS 来登录百度帐号<br><a href="https://github.com/iikira/BaiduPCS-Go/wiki/%E5%85%B3%E4%BA%8E-%E8%8E%B7%E5%8F%96%E7%99%BE%E5%BA%A6-BDUSS" rel="external nofollow noopener noreferrer" target="_blank">关于 获取百度 BDUSS</a> ，命令：<br><code>BaiduPCS-Go login -bduss=<bduss></bduss></code></p></li></ul><p>可使用 <code>BaiduPCS-Go -h</code> 查看帮助。<br>目前 BaiduPCS-Go 支持 多线程下载，上传，离线下载等功能，这里我只介绍下下载，更多使用方法可以查看项目 Readme 文档。</p><p>使用 ssh 连接路由器，切换到存放 BaiduPCS-Go 的目录，我为了方便使用将文件重命名为 B ，如果是手动下载上传到路由器的还得注意文件权限，如果运行时出现 permission dead 就是无权限，可运行 <code>chmod 0777 ./B</code> 也可在 winscp 里更改。首次运行需要登录才能使用，登录后可先输入 <code>h</code> 查看帮助<br><img alt="ssh" data-src="https://i.loli.net/2019/06/08/5cfb5d704fd6651176.jpg"><br>其他的一些文件处理命令与 linux 一样，如 mv 是移动，cp 是复制，ls 列出当前目录等等。<br>下载文件或目录<br><code>BaiduPCS-Go download <网盘文件或目录的路径1> <文件或目录2> <文件或目录3> ... BaiduPCS-Go d <网盘文件或目录的路径1> <文件或目录2> <文件或目录3> ...</code></p><p>可选参数</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">test</span>          测试下载, 此操作不会保存文件到本地</span><br><span class="line">--ow            overwrite, 覆盖已存在的文件</span><br><span class="line">--status        输出所有线程的工作状态</span><br><span class="line">--save          将下载的文件直接保存到当前工作目录</span><br><span class="line">--saveto value  将下载的文件直接保存到指定的目录</span><br><span class="line">-x              为文件加上执行权限, (windows系统无效)</span><br><span class="line">--share         以分享文件的方式获取下载链接来下载</span><br><span class="line">--locate        以获取直链的方式来下载</span><br><span class="line">-p value        指定下载线程数</span><br></pre></td></tr></tbody></table></figure><p>支持多个文件或目录的下载.<br>下载的文件默认保存到 程序所在目录 的 download/ 目录, 支持设置指定目录, 重名的文件会自动跳过!<br>使用 <code>./B config set -savedir /mnt/sdb1</code>可设置下载目录。这样就可以下载了。我用的是默认的 100 线程，下载速度还可以，如果闲速度不满意可适当提高线程数.</p><details><summary>点击显示图片</summary><p><img alt="BaiduPCS-Go" data-src="https://i.loli.net/2019/06/08/5cfb5d73e805571236.jpg"></p></details><p>当然高线程也会吃更多配置。<br>下载完可直接使用 smaba 共享，使用 fooview 进行播放。</p><details><summary>点击显示图片</summary><p><img alt="foooview" data-src="https://i.loli.net/2019/06/08/5cfb5d744ee9883146.jpg"></p></details><p>搭配 frp 将 smaba ，ssh 穿透到外网即可实现远程下载。</p><div class="note danger"><p>注意：将路由器 ssh 及 smaba 暴露到外网有一定风险</p></div><p>快捷脚本：</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/system/bin/sh</span></span><br><span class="line">BaiduPCS-Go config <span class="built_in">set</span> -appid=266719 &>/dev/null</span><br><span class="line">BaiduPCS-Go cp <span class="variable">$1</span> /apps/baidu_shurufa &>/dev/null</span><br><span class="line">BaiduPCS-Go config <span class="built_in">set</span> -appid=265486 &>/dev/null</span><br><span class="line">BaiduPCS-Go d /apps/baidu_shurufa/*</span><br><span class="line">BaiduPCS-Go rm /adds/baidu_shurufa/* &>/dev/null</span><br><span class="line">BaiduPCS-Go config <span class="built_in">set</span> -appid=266719 &>/dev/null</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/08/5cfb5d6d5fab581544.jpg&quot; alt=&quot;BaiduDesk&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="路由器" scheme="https://cxyzzz.gtihub.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="OpenWrt" scheme="https://cxyzzz.gtihub.io/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>KMS</title>
    <link href="https://cxyzzz.gtihub.io/posts/343b8a35.html"/>
    <id>https://cxyzzz.gtihub.io/posts/343b8a35.html</id>
    <published>2018-06-06T13:11:44.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><p><img alt="KMS" data-src="https://i.loli.net/2019/06/08/5cfb5cd807c3728109.jpg"></p><a id="more"></a><p>路由器上搭建了一个 KMS 服务器，测试了下可以使用。我本人用的数字许可证激活的，不需要 KMS 但弄都弄好了，就发出来算了。算是留个备份。(服务器是搭建在寝室路由器上的，并未进行穿透，因而只能在学校内使用。只要学校网络不出问题，应该都能正常使用，可用 ping 命令测试，如果连不上可能正在重启或是更新固件) ps:因学校网络原因 IP 可能会变化。</p><p>注意：仅 Windows Vista 及以上系统可以使用 KMS 激活，且 Windows7 旗舰版 不支持 KMS 激活。<br>KMS 激活也需要密钥，且不同版本对应不同密钥。不过这个密钥可以在微软官网找到。<br>此处以 windows 10 专业版为例，其密钥为：W269N-WFGWX-YVC9B-4J6C9-T83GX<br>其他版本也可在微软官网找到。</p><p>Windows KMS 密钥 <a href="https://technet.microsoft.com/en-us/library/jj612867(v=ws.11).aspx" rel="external nofollow noopener noreferrer" target="_blank">https://technet.microsoft.com/en-us/library/jj612867(v=ws.11).aspx</a><br>Office KMS 密钥 <a href="https://technet.microsoft.com/en-us/library/dn385360(v=office.16).aspx" rel="external nofollow noopener noreferrer" target="_blank">https://technet.microsoft.com/en-us/library/dn385360(v=office.16).aspx</a></p><ul><li>激活 windows 10 专业版<br>右键开始菜单，点击命令提示符（管理员）或者 Windows PowerShell （管理员)<br>输入 <code>slmgr /upk</code> 卸载原有密钥，如果是刚装好的系统，这一步可以省略。<br>输入 <code>slmgr /skms 172.30.192.89</code> 设置 KMS 服务器地址。<br>输入 <code>slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</code> 安装 KMS 密钥<br>输入 <code>slmgr /ato</code> 查看激活状态，如果显示 “成功地激活了产品”，表示激活成功，<br>每隔 180 天会自动续订，不需要担心激活过期。<br><img alt="Windows_KMS" data-src="https://i.loli.net/2019/06/08/5cfb5cfb264eb24023.jpg"></li><li>激活 Office 2016<br>右键开始菜单，点击命令提示符（管理员）或者 Windows PowerShell （管理员)<br>输入 <code>cd "C:\Program Files (x86)\Microsoft Office\Office16"</code> 这个是 Office 激活脚本所在位置，不同的 Office 版本不一样，比如 Office 2013 是 <code>cd "C:\Program Files (x86)\Microsoft Office\Office15"</code>。<br>输入 <code>cscript ospp.vbs /sethst:172.30.192.89</code> 将激活服务器地址设为 172.30.192.89。<br>输入 <code>cscript ospp.vbs /act</code> 激活 office。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/06/08/5cfb5cd807c3728109.jpg&quot; alt=&quot;KMS&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="路由器" scheme="https://cxyzzz.gtihub.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="OpenWrt" scheme="https://cxyzzz.gtihub.io/tags/OpenWrt/"/>
    
      <category term="Office" scheme="https://cxyzzz.gtihub.io/tags/Office/"/>
    
      <category term="Windows" scheme="https://cxyzzz.gtihub.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Pisen云座充</title>
    <link href="https://cxyzzz.gtihub.io/posts/13b1ea83.html"/>
    <id>https://cxyzzz.gtihub.io/posts/13b1ea83.html</id>
    <published>2018-04-14T04:20:00.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><div class="note success"><h4 id="2018-6-19-更新：openwrt-固件"><a href="#2018-6-19-更新：openwrt-固件" class="headerlink" title="2018/6/19 更新：openwrt 固件"></a>2018/6/19 更新：openwrt 固件</h4><p>链接: <a href="https://pan.baidu.com/s/1MqWci4ElhyytjqgCj9GnFw" rel="external nofollow noopener noreferrer" target="_blank">https://pan.baidu.com/s/1MqWci4ElhyytjqgCj9GnFw</a> 密码: <code>7ckw</code><br><img alt="op" data-src="https://ws1.sinaimg.cn/large/ec245efdgy1fsguadvf4xj211y0kgmzo.jpg"></p></div><a id="more"></a><p>去年在基安看见的一个<a href="http://www.right.com.cn/forum/forum.php?mod=viewthread&tid=209145&fromguid=hot&extra=&mobile=2" rel="external nofollow noopener noreferrer" target="_blank">帖子</a>，品胜云座充的拆机板，看了下可以刷 open-wrt 以及 Tp-link WR703n 的包还有 usb 接口就入手了三块板子。到手后就全刷了 u-boot 刷了个 open-wrt 后就放抽屉里吃灰了。后面翻出来几次装了 mentohust 能登录学校的锐捷后就又吃灰了。 最近因为在弄主路由 k2 的内网穿透，接触到了 opkg 包管理器，突然想到了吃灰的云座充。回到寝室就刷了 wr703n 的 LEDE。接着就是弄 usb 挂载以及存储空间的扩展。</p><p>ps: LEDE 默认不开启无线网卡，可使用网线连电脑，访问 192.168.1.1 打开无线网卡。若要桥接则要打开 DHCP ，只作 Ap 可不设置，默认静态 ip。</p><ol><li><p><a href="https://wiki.openwrt.org/doc/howto/usb.storage" rel="external nofollow noopener noreferrer" target="_blank">安装 usb 设备支持</a></p><ul><li><code>kmod-usb-storage</code> ——必须。大概是 内核支持USB大容量存储设备？</li><li><code>kmod-fs-<file_system></file_system></code> ——必须。格式化分区的文件系统,包含 kmod-fs-ext4, kmod-fs-hfs, kmod-fs-hfsplus, kmod-fs-msdos, kmod-fs-ntfs, kmod-fs-reiserfs and kmod-fs-xfs.我用的是 ext4 分区的，所以装的 kmod-fs-ext4。</li><li><code>kmod-usb-storage-extras</code> —— 可选。内核支持更多驱动程序，例如SmartMedia读卡器。不知道干嘛的:p.</li><li><code>block-mount</code> ——必需。用于安装和检查块设备（文件系统和交换）和热插拔功能（在设备插入时识别）的脚本。后面的扩展内部存储也要用到。</li><li><code>kmod-scsi-core</code>——Any mass storage is a generic SCSI device.不知道干嘛的，机翻是：任何海量存储都是通用的 SCSI 设备。</li></ul></li><li><p><a href="https://wiki.openwrt.org/doc/uci/fstab" rel="external nofollow noopener noreferrer" target="_blank">配置 fastab</a></p><ul><li>自动创建初始 fstab：<br>ssh 连接路由器 输入<code>block detect > /etc/config/fstab</code>。或者在网页的block-point 项点击自动配置规则。（LEDE 后台管理默认是英文的可以安装 luci-i18n-base-zh-cn 安装完成后就是中文界面了，如果没有可以去设置改成中文）</li><li>修改 fastab：<code>vi /etc/config/fstab</code> 也可在网页进行配置，但某些参数配置不了。</li><li>设置 fastab 开机自启：<code>/etc/init.d/fstab enable</code><br>fastab 还有很多参数，具体可以去 <a href="https://wiki.openwrt.org/doc/uci/fstab" rel="external nofollow noopener noreferrer" target="_blank">Wiki</a> 查看。</li></ul></li><li><p><a href="https://wiki.openwrt.org/doc/howto/extroot" rel="external nofollow noopener noreferrer" target="_blank">扩展内置存储</a>这个可以让路由器从外部存储的镜像启动，我只用了扩展路由的内部空间。</p><ul><li><p>将内置存储 /overlay 的文件复制到 USB 存储中：<br><code>mount /dev/sda1 /mnt ; tar -C /overlay -cvf - . | tar -C /mnt -xf - ; umount /mnt</code></p></li><li><p>使用以下命令创建fstab:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">block detect > /etc/config/fstab; \</span><br><span class="line">    sed -i s/option$'\t'enabled$'\t'\'0\'/option$'\t'enabled$'\t'\'1\'/ /etc/config/fstab; \</span><br><span class="line">    sed -i s#/mnt/sda1#/overlay# /etc/config/fstab; \</span><br><span class="line">    cat /etc/config/fstab;</span><br></pre></td></tr></tbody></table></figure></li><li><p>最后使用下面命令允许安装大于 /rom 的软件：<br><code>echo option force_space >> /etc/opkg.conf</code> 也可在网页端进行修改。<br>在网页端可以看见 / 分区和 /overlay 变大了，如果 / 分区没变可以插着优盘重启后应会成功挂载。<br>我的是 16g 的内存卡，分了个 128M 的分区出来，可以看到两个分区都正常挂载了，并且成功将 128M 的分区扩展到内部存储。<br><img alt="fstab" data-src="https://i.loli.net/2019/06/08/5cfb5c6be26e029890.jpg"><br>到此品胜云座充的折腾告一段落，接下来就是进行软件方面的设置了。</p></li></ul></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script></body></html>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;&lt;h4 id=&quot;2018-6-19-更新：openwrt-固件&quot;&gt;&lt;a href=&quot;#2018-6-19-更新：openwrt-固件&quot; class=&quot;headerlink&quot; title=&quot;2018/6/19 更新：openwrt 固件&quot;&gt;&lt;/a&gt;2018/6/19 更新：openwrt 固件&lt;/h4&gt;&lt;p&gt;链接: &lt;a href=&quot;https://pan.baidu.com/s/1MqWci4ElhyytjqgCj9GnFw&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;https://pan.baidu.com/s/1MqWci4ElhyytjqgCj9GnFw&lt;/a&gt; 密码: &lt;code&gt;7ckw&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/ec245efdgy1fsguadvf4xj211y0kgmzo.jpg&quot; alt=&quot;op&quot;&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="路由器" scheme="https://cxyzzz.gtihub.io/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="OpenWrt" scheme="https://cxyzzz.gtihub.io/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>Hello-Hexo</title>
    <link href="https://cxyzzz.gtihub.io/posts/59e5d8b8.html"/>
    <id>https://cxyzzz.gtihub.io/posts/59e5d8b8.html</id>
    <published>2017-05-21T09:21:00.000Z</published>
    <updated>2019-08-14T05:11:06.794Z</updated>
    
    <content type="html"><![CDATA[<p>Hello Hexo！</p><a id="more"></a><p>希望阳光很暖，微风不燥，时光不老，你我都好。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hello Hexo！&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
